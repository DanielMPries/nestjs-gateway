var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.72,1,2.004]],["body/modules/AppModule.html",[0,0.896,1,3.723,2,1.183,3,1.834,4,2.303,5,2.303,6,3.082,7,0.035,8,2.97,9,2.437,10,2.234,11,1.582,12,1.582,13,0.335,14,0.335,15,0.293,16,2.77,17,2.591,18,0.634,19,2.77,20,3.913,21,4.93,22,0.634,23,2.77,24,0.695,25,0.896,26,0.378,27,0.523,28,3.913,29,0.634,30,1.582,31,0.904,32,0.634,33,3.253,34,1.582,35,2.77,36,2.303,37,2.494,38,2.77,39,2.77,40,2.77,41,2.494,42,2.77,43,2.77,44,2.494,45,2.77,46,2.77,47,2.494,48,2.77,49,2.77,50,2.77,51,1.765,52,2.77,53,2.77,54,2.77,55,3.253,56,2.77,57,2.303,58,2.77,59,2.77,60,1.995,61,2.77,62,1.765,63,2.77,64,2.77,65,0.907,66,2.303,67,2.77,68,2.303,69,2.303,70,2.77,71,2.77,72,2.303,73,2.77,74,2.303,75,2.77,76,2.77,77,2.303,78,2.77,79,0.335,80,0.293,81,1.995,82,1.995,83,1.995,84,2.303,85,1.995,86,2.77,87,2.77,88,0.021,89,0.021]],["title/classes/CacheConfigurationService.html",[80,0.333,90,2.004]],["body/classes/CacheConfigurationService.html",[7,0.034,13,0.453,14,0.453,15,0.397,17,2.14,18,1.098,22,0.858,29,0.858,31,0.81,32,0.858,33,3.988,34,2.14,57,3.115,79,0.453,80,0.397,88,0.026,89,0.026,90,3.057,91,2.14,92,3.988,93,3.115,94,3.057,95,5.291,96,0.512,97,5.578,98,3.747,99,5.291,100,4.017,101,4.797,102,2.699,103,3.115,104,2.699,105,3.988,106,1.227,107,1.933,108,2.388,109,3.747,110,3.747,111,3.747,112,3.747,113,3.747,114,3.747,115,3.747]],["title/classes/CaseInsensitiveMap.html",[80,0.333,116,2.004]],["body/classes/CaseInsensitiveMap.html",[7,0.035,13,0.186,14,0.186,15,0.163,18,0.572,22,1.17,24,1.074,25,0.98,26,0.585,27,0.809,29,1.307,30,2.445,79,0.186,80,0.163,88,0.013,89,0.013,91,0.878,96,0.21,106,1.402,116,1.592,117,4.334,118,1.278,119,2.115,120,1.278,121,1.278,122,1.537,123,5.85,124,1.537,125,2.076,126,0.975,127,1.627,128,3.155,129,3.633,130,2.498,131,3.633,132,2.498,133,4.996,134,4.702,135,0.793,136,2.498,137,4.861,138,2.498,139,2.498,140,6.125,141,3.323,142,4.513,143,1.107,144,2.498,145,0.878,146,1.067,147,1.537,148,2.498,149,2.498,150,5.513,151,1.537,152,2.498,153,4.041,154,2.498,155,2.617,156,1.537,157,4.513,158,3.997,159,1.537,160,1.537,161,1.537,162,1.537,163,1.537,164,1.537,165,1.537,166,2.498,167,2.498,168,1.537,169,1.537,170,0.793,171,1.537,172,1.537,173,1.537,174,1.537,175,1.537,176,2.498,177,1.537,178,3.997,179,2.076,180,2.498,181,1.537,182,2.498,183,2.498,184,1.537,185,2.498,186,1.537,187,2.498,188,1.537,189,2.729,190,1.537,191,1.762,192,1.537,193,1.537,194,1.278,195,2.498,196,3.633,197,1.299,198,2.498,199,1.537,200,1.537,201,1.537,202,1.537,203,1.537,204,1.537,205,1.537,206,1.537,207,1.537,208,1.537,209,3.155,210,2.498,211,2.498,212,1.799,213,1.537]],["title/injectables/CorrelationIdMiddleware.html",[41,2.004,214,1.03]],["body/injectables/CorrelationIdMiddleware.html",[7,0.035,13,0.384,14,0.384,15,0.337,18,0.986,22,0.728,24,0.798,25,0.728,26,0.434,27,0.601,29,0.728,30,1.816,31,0.659,32,0.728,41,2.744,79,0.384,80,0.337,81,2.291,82,2.291,83,3.937,84,2.644,85,2.291,88,0.023,89,0.023,94,2.027,96,0.434,106,1.41,170,2.221,191,1.682,212,2.291,214,1.41,215,1.641,216,3.58,217,2.644,218,2.459,219,3.58,220,3.334,221,2.287,222,2.987,223,4.349,224,3.181,225,1.816,226,3.58,227,1.641,228,4.882,229,3.181,230,4.058,231,2.787,232,4.306,233,3.181,234,3.181,235,3.181,236,4.306,237,3.181,238,3.181,239,3.181,240,4.306,241,4.882,242,3.181,243,3.181,244,3.181,245,2.644,246,3.181,247,3.181,248,3.181]],["title/interfaces/ElasticSearchLoggerOptions.html",[249,1.03,250,1.796]],["body/interfaces/ElasticSearchLoggerOptions.html",[7,0.034,13,0.454,14,0.454,15,0.398,25,1.278,26,0.788,31,0.736,51,3.559,66,4.643,68,4.643,69,4.643,77,4.643,79,0.454,88,0.026,89,0.026,96,0.513,126,1.877,145,2.147,155,3.817,197,2.11,249,1.231,250,2.745,251,1.606,252,3.126,253,1.939,254,1.344,255,2.396,256,5.585,257,2.708,258,2.396]],["title/classes/ElasticSearchLoggerService.html",[80,0.333,259,1.623]],["body/classes/ElasticSearchLoggerService.html",[7,0.035,13,0.338,14,0.156,15,0.137,18,0.496,22,1.133,24,1.343,25,1.077,26,0.771,27,0.889,29,1.043,31,0.557,32,0.296,79,0.156,80,0.137,88,0.012,89,0.012,91,0.738,96,0.83,106,1.493,107,0.667,126,1.091,127,2.157,135,1.117,141,0.738,143,3.283,145,0.738,146,0.925,189,1.781,191,1.091,197,2.1,250,1.866,253,2.65,254,0.462,257,0.931,258,0.824,259,1.117,260,4.198,261,1.075,262,1.686,263,3.937,264,2.794,265,3.68,266,2.467,267,2.165,268,2.165,269,1.38,270,2.165,271,3.639,272,2.165,273,2.165,274,2.165,275,1.293,276,2.165,277,0.999,278,1.293,279,2.165,280,2.165,281,4.707,282,1.293,283,2.165,284,5.802,285,1.293,286,5.467,287,3.701,288,2.165,289,1.293,290,2.165,291,1.293,292,1.075,293,2.165,294,1.293,295,1.293,296,1.293,297,2.165,298,2.165,299,3.639,300,2.165,301,1.293,302,2.165,303,1.293,304,2.165,305,1.293,306,1.075,307,0.824,308,2.165,309,1.293,310,1.293,311,1.293,312,1.293,313,0.824,314,2.717,315,3.273,316,1.293,317,1.293,318,1.293,319,3.639,320,2.165,321,1.293,322,1.293,323,1.293,324,1.293,325,2.165,326,2.794,327,2.165,328,2.165,329,2.165,330,1.293,331,2.165,332,2.165,333,2.165,334,2.165,335,1.293,336,1.293,337,1.293,338,1.293,339,1.293,340,1.293,341,1.293,342,1.075,343,1.293]],["title/classes/ElasticSearchLoggerUtilities.html",[80,0.333,307,2.004]],["body/classes/ElasticSearchLoggerUtilities.html",[7,0.034,13,0.459,14,0.459,15,0.402,18,1.107,22,0.869,24,0.953,25,0.869,26,0.519,27,0.717,29,0.869,51,3.572,60,2.736,79,0.585,80,0.402,88,0.026,89,0.026,91,2.169,96,0.519,106,1.244,146,1.623,197,2.07,253,2.496,265,2.421,307,3.083,344,3.485,345,2.736,346,3.835,347,5.324,348,3.798,349,5.606,350,3.798,351,3.835,352,3.798,353,3.158,354,2.736,355,3.158,356,2.736,357,3.158,358,3.798]],["title/controllers/HealthController.html",[359,1.623,360,2.004]],["body/controllers/HealthController.html",[7,0.034,13,0.45,14,0.45,15,0.394,18,1.093,22,0.852,24,0.934,25,0.852,26,0.508,27,0.703,29,0.852,30,2.125,31,0.852,32,0.852,79,0.45,80,0.394,88,0.026,89,0.026,96,0.508,191,1.454,221,2.471,222,3.177,227,1.92,262,1.92,314,3.094,351,2.681,359,1.92,360,3.044,361,2.125,362,3.094,363,2.681,364,3.971,365,3.722,366,3.094,367,3.722,368,2.72,369,1.744,370,3.722,371,3.094,372,3.722,373,3.722,374,2.372,375,3.722,376,3.722,377,3.722,378,3.722,379,3.722]],["title/modules/HealthModule.html",[0,0.72,6,1.796]],["body/modules/HealthModule.html",[0,1.137,2,1.692,3,2.328,6,3.416,7,0.034,10,2.837,11,2.261,12,2.261,13,0.479,14,0.479,15,0.419,17,2.261,31,0.871,32,0.906,79,0.479,80,0.419,88,0.027,89,0.027,360,3.459,361,3.099,368,3.086,369,1.856,380,3.292,381,3.292,382,3.96,383,3.578,384,4.968,385,2.852]],["title/injectables/HealthService.html",[214,1.03,368,1.623]],["body/injectables/HealthService.html",[7,0.034,13,0.391,14,0.391,15,0.342,18,0.997,22,1.127,24,0.812,25,0.741,26,0.442,27,0.611,29,0.741,31,0.754,32,0.741,34,1.848,79,0.391,80,0.342,88,0.023,89,0.023,96,0.442,100,4.079,106,1.426,127,2.836,135,2.247,197,1.557,214,1.426,215,1.669,262,2.836,265,2.062,363,2.331,364,4.38,368,2.247,385,2.331,386,2.69,387,4.356,388,5.884,389,2.69,390,5.787,391,4.925,392,5.787,393,5.787,394,3.236,395,3.236,396,3.236,397,3.236,398,3.236,399,3.236,400,2.69,401,3.236,402,3.236,403,2.69,404,3.236,405,3.236]],["title/injectables/LoggerMiddleware.html",[44,2.004,214,1.03]],["body/injectables/LoggerMiddleware.html",[7,0.034,13,0.432,14,0.432,15,0.379,18,1.066,22,1.066,24,1.168,25,1.066,26,0.636,27,0.879,29,0.819,30,2.044,31,0.792,32,0.819,44,2.967,79,0.432,80,0.379,83,3.948,88,0.025,89,0.025,94,2.281,96,0.489,135,1.846,214,1.525,215,1.846,218,2.659,219,3.871,220,3.493,221,2.425,222,3.13,223,4.557,225,2.044,226,3.871,227,1.846,254,1.665,259,2.828,262,1.846,374,2.281,406,2.975,407,3.579,408,3.579,409,3.579,410,3.579,411,3.579,412,3.579,413,2.281,414,3.579]],["title/modules/LoggingModule.html",[0,0.72,8,1.796]],["body/modules/LoggingModule.html",[0,1.149,2,1.437,3,2.095,7,0.035,8,3.27,10,2.552,11,1.92,12,1.92,13,0.406,14,0.406,15,0.356,18,0.77,22,0.77,24,0.844,25,0.77,26,0.459,27,0.635,29,0.77,31,0.819,32,1.023,79,0.406,80,0.356,81,2.422,82,2.422,85,2.422,88,0.024,89,0.024,106,1.101,250,3.055,253,2.306,254,1.202,259,3.13,265,2.143,277,1.795,306,2.796,346,3.219,383,3.219,415,2.796,416,2.796,417,3.363,418,4.174,419,2.796,420,3.716,421,3.363,422,4.174,423,3.363,424,3.363,425,2.422,426,3.363,427,2.796]],["title/injectables/ProxyConfigService.html",[47,2.004,214,1.03]],["body/injectables/ProxyConfigService.html",[7,0.035,13,0.424,14,0.424,15,0.372,18,1.053,22,1.053,24,0.881,25,0.804,26,0.479,27,0.663,29,0.804,31,0.785,32,0.804,34,2.005,47,2.931,65,1.15,79,0.424,80,0.372,88,0.025,89,0.025,94,2.238,96,0.479,100,4.174,106,1.15,135,1.811,191,1.796,214,1.506,215,1.811,231,2.626,254,1.255,369,2.155,374,2.238,389,2.919,428,4.263,429,2.919,430,4.524,431,3.511,432,3.511,433,1.833,434,2.372,435,3.511,436,3.511,437,3.511,438,2.626,439,3.511,440,2.931,441,3.511,442,3.511]],["title/controllers/ProxyController.html",[359,1.623,443,2.004]],["body/controllers/ProxyController.html",[7,0.034,13,0.4,14,0.4,15,0.351,18,1.013,22,0.758,24,0.831,25,0.758,26,0.452,27,0.626,29,0.758,31,0.763,32,0.758,65,1.815,79,0.4,80,0.351,88,0.024,89,0.024,96,0.452,127,1.709,146,1.416,189,2.82,191,1.294,220,3.769,221,2.074,222,3.324,227,1.709,254,1.582,262,1.709,266,2.129,269,2.82,313,2.111,359,2.283,361,1.892,366,2.754,369,1.552,374,2.111,443,2.82,444,2.754,445,3.313,446,4.421,447,3.313,448,4.426,449,2.571,450,2.754,451,2.754,452,3.313,453,3.313,454,3.313,455,3.313,456,3.679,457,4.426,458,2.754,459,3.313,460,2.754,461,3.313,462,3.313]],["title/modules/ProxyModule.html",[0,0.72,9,1.474]],["body/modules/ProxyModule.html",[0,0.92,2,0.784,3,1.349,7,0.035,9,2.35,10,1.643,11,1.048,12,1.048,13,0.222,14,0.222,15,0.194,17,1.048,18,0.42,22,0.92,24,1.009,25,0.92,26,0.596,27,0.759,29,0.92,31,0.768,32,0.42,62,1.17,65,1.162,79,0.222,80,0.194,88,0.015,89,0.015,106,1.642,107,1.831,108,2.262,127,2.073,146,0.784,170,1.485,191,1.891,197,1.029,221,1.349,225,1.643,251,0.784,254,1.029,258,1.17,266,1.517,277,1.792,313,1.17,315,2.393,346,3.611,361,2.027,369,0.86,383,2.895,413,1.834,419,1.526,420,2.393,422,3.63,425,3.145,427,1.526,433,1.561,434,1.485,438,2.295,443,2.262,449,2.389,463,1.526,464,1.526,465,1.322,466,2.878,467,1.835,468,3.362,469,1.835,470,4.366,471,2.878,472,1.835,473,1.835,474,1.835,475,1.835,476,2.878,477,1.835,478,2.393,479,1.048,480,2.878,481,2.073,482,1.834,483,2.782,484,1.526,485,1.643,486,2.073,487,1.526,488,1.526,489,1.526,490,1.526,491,1.526,492,1.526,493,1.526,494,2.073,495,2.895,496,1.526,497,1.322,498,1.526,499,1.526,500,1.526,501,1.526,502,1.526,503,1.526,504,1.526,505,1.526,506,1.526,507,2.951,508,1.526,509,3.342,510,1.322,511,1.526,512,1.526,513,1.526,514,1.526,515,1.526,516,1.526,517,1.526,518,1.526,519,1.526,520,1.526,521,1.526,522,1.526,523,1.526,524,1.526,525,1.835,526,1.835,527,2.878,528,2.878,529,2.878,530,3.55,531,1.322,532,1.835,533,1.835,534,1.835,535,1.835]],["title/interfaces/ProxyModuleAsyncOptions.html",[249,1.03,468,2.004]],["body/interfaces/ProxyModuleAsyncOptions.html",[0,1.165,7,0.034,9,2.133,13,0.418,14,0.418,15,0.366,26,0.839,27,1.127,31,0.779,62,3.447,65,1.49,79,0.418,88,0.024,89,0.024,96,0.472,107,2.79,108,3.447,119,1.62,125,3.784,126,1.778,170,2.348,249,1.132,251,1.477,255,2.203,266,2.174,277,1.933,287,2.49,433,1.627,434,1.783,468,2.901,531,2.49,536,2.203,537,4.552,538,5.409,539,3.457,540,3.457,541,2.874]],["title/interfaces/ProxyModuleOptions.html",[249,1.03,433,1.124]],["body/interfaces/ProxyModuleOptions.html",[0,1.156,7,0.034,13,0.411,14,0.411,15,0.36,26,0.69,27,1.085,31,0.69,65,1.919,79,0.411,88,0.024,89,0.024,96,0.465,119,1.595,126,1.76,197,1.806,218,3.07,249,1.654,251,1.454,255,2.169,277,1.611,369,2.519,433,1.922,440,3.426,479,2.884,495,3.245,497,3.872,536,2.169,542,3.746,543,3.219,544,3.746,545,4.506,546,3.347,547,3.746,548,2.452]],["title/interfaces/ProxyModuleOptionsFactory.html",[249,1.03,434,1.623]],["body/interfaces/ProxyModuleOptionsFactory.html",[0,1.23,7,0.034,9,2.297,13,0.469,14,0.469,15,0.41,18,1.122,22,0.887,29,0.887,31,0.594,65,1.27,79,0.469,88,0.026,89,0.026,96,0.53,119,1.817,249,1.27,251,1.657,266,2.094,277,2.083,287,4.068,430,4.696,433,2.083,434,2.529,536,3.124,541,4.075,549,3.224,550,3.878,551,4.902,552,4.902]],["title/injectables/ProxyService.html",[214,1.03,449,1.623]],["body/injectables/ProxyService.html",[0,0.552,7,0.035,13,0.178,14,0.178,15,0.156,18,0.552,22,0.81,24,0.98,25,0.701,26,0.534,27,0.578,29,0.701,31,0.678,32,0.337,65,1.716,79,0.178,80,0.156,88,0.013,89,0.013,96,0.201,106,1.159,107,0.759,116,1.537,119,1.659,120,2.005,121,1.224,126,0.942,127,2.385,135,1.827,141,1.377,143,1.06,145,1.377,146,1.513,153,2.005,189,3.281,191,1.97,194,1.224,197,1.653,214,0.79,215,0.759,218,1.377,220,3.479,221,2.308,222,2.881,225,2.396,227,0.759,231,2.022,251,0.629,254,1.266,258,0.938,262,1.58,266,1.793,269,2.823,277,1.928,292,1.224,351,1.737,369,0.69,413,1.537,433,1.266,438,2.231,446,3.248,449,1.244,456,1.224,458,1.224,460,1.224,479,1.749,482,0.938,483,0.938,484,1.224,485,0.84,494,1.06,510,1.737,543,1.952,546,2.396,547,2.005,548,2.814,553,1.224,554,2.411,555,4.196,556,2.411,557,4.539,558,2.005,559,2.411,560,3.063,561,2.411,562,1.472,563,2.411,564,1.472,565,4.194,566,1.472,567,3.541,568,3.541,569,2.411,570,1.472,571,2.411,572,2.411,573,2.411,574,1.06,575,1.472,576,1.472,577,1.472,578,1.472,579,4.624,580,1.472,581,2.411,582,1.472,583,1.472,584,1.472,585,1.472,586,1.472,587,1.472,588,1.472,589,2.411,590,1.472,591,1.472,592,1.472,593,1.472,594,1.472,595,1.472,596,2.411,597,1.472,598,1.472,599,1.472,600,1.472,601,1.472,602,1.472,603,3.063,604,2.411,605,1.472,606,1.472,607,1.472,608,2.411,609,1.472,610,2.411,611,1.472,612,1.472,613,2.411,614,1.472,615,1.472,616,1.472,617,2.411,618,1.472,619,1.472,620,1.472,621,1.472,622,1.472,623,1.472,624,2.411,625,1.472,626,1.472,627,1.472,628,1.472,629,1.472]],["title/modules/RedisCachingModule.html",[0,0.72,37,2.004]],["body/modules/RedisCachingModule.html",[0,1.204,2,1.857,7,0.034,13,0.525,14,0.525,15,0.46,17,2.482,31,0.805,32,0.995,37,3.352,62,2.77,79,0.525,80,0.46,88,0.028,89,0.028,90,3.352,418,3.613,440,2.77,630,4.346,631,4.346,632,5.261,633,5.261,634,4.346]],["title/interfaces/Service.html",[249,1.03,546,1.796]],["body/interfaces/Service.html",[7,0.034,13,0.4,14,0.4,15,0.351,26,0.726,27,1.004,31,0.507,65,1.815,79,0.4,88,0.024,89,0.024,96,0.452,119,1.552,126,1.728,155,3.589,197,2.115,218,2.527,231,3.256,249,1.632,251,1.416,277,1.582,433,1.582,438,3.037,440,3.389,479,1.892,542,3.679,543,3.176,544,3.679,546,3.256,548,2.386,557,3.679,558,3.679,565,3.679,635,2.754,636,5.319,637,4.426,638,4.426,639,4.426,640,4.426]],["title/coverage.html",[641,3.553]],["body/coverage.html",[0,1.029,7,0.034,15,0.288,26,0.372,41,1.735,44,1.735,47,1.735,80,0.518,88,0.021,89,0.021,90,1.735,92,2.263,93,2.263,116,1.735,117,2.263,118,2.263,146,1.163,170,2.769,212,4.459,214,1.692,216,2.263,217,2.263,249,1.692,250,1.555,252,2.263,253,2.318,254,0.973,255,2.864,259,1.404,260,2.263,261,2.263,266,1.163,277,0.973,307,1.735,344,1.961,345,1.961,356,1.961,359,1.994,360,1.735,362,2.263,368,1.404,386,2.263,406,2.263,428,2.263,429,2.263,433,0.973,434,1.404,443,1.735,444,2.263,449,1.404,465,1.961,468,1.735,481,1.961,482,1.735,483,1.735,485,1.555,486,1.961,536,2.864,546,1.555,549,2.263,553,2.263,574,1.961,635,2.263,641,2.263,642,2.723,643,2.723,644,2.723,645,5.167,646,4.495,647,2.723,648,2.723,649,2.263,650,2.263,651,5.82,652,2.723,653,2.723,654,4.495,655,2.723,656,2.723,657,2.723,658,3.736,659,4.893,660,2.723,661,2.723,662,2.723,663,2.723,664,3.214,665,3.214,666,2.263,667,2.263,668,3.736,669,2.263,670,2.723,671,2.723]],["title/dependencies.html",[3,1.77,672,2.192]],["body/dependencies.html",[3,1.768,7,0.035,32,0.863,34,2.154,36,3.136,65,1.235,80,0.51,88,0.026,89,0.026,102,3.47,103,4.005,104,2.717,105,3.136,227,2.485,257,2.717,371,3.136,385,2.717,479,2.154,673,3.773,674,3.773,675,3.773,676,5.308,677,3.773,678,3.773,679,3.773,680,4.818,681,3.773,682,3.773,683,3.773,684,3.773,685,3.773,686,3.773,687,3.773,688,3.773,689,3.773,690,3.773,691,3.773,692,3.773,693,3.773,694,3.773,695,3.773,696,3.773,697,3.773,698,3.773,699,3.773,700,3.773,701,3.773,702,3.773]],["title/miscellaneous/enumerations.html",[703,1.36,704,3.141]],["body/miscellaneous/enumerations.html",[7,0.033,51,3.433,60,3.257,88,0.029,89,0.029,96,0.618,141,3.286,253,2.779,344,3.257,345,3.88,353,3.76,354,3.257,355,3.76,356,3.257,357,3.76,703,2.333,704,3.76,705,4.522]],["title/miscellaneous/functions.html",[703,1.36,706,3.141]],["body/miscellaneous/functions.html",[7,0.033,24,1.468,25,1.339,26,0.537,27,1.105,88,0.027,89,0.027,96,0.537,179,3.269,450,4.112,485,2.824,531,3.562,574,3.562,649,3.269,650,4.498,664,3.269,665,4.498,666,4.112,667,4.112,668,3.269,669,4.112,703,2.028,706,3.269,707,3.932,708,5.411,709,4.946,710,3.932,711,3.932,712,3.932,713,3.932,714,3.932,715,3.932]],["title/index.html",[96,0.36,716,2.636,717,2.636]],["body/index.html",[7,0.034,72,4.022,74,3.158,88,0.026,89,0.026,102,3.835,104,2.736,230,3.158,231,2.169,245,4.426,269,3.083,342,3.158,359,1.959,363,3.485,400,3.158,403,3.158,718,3.798,719,3.798,720,3.798,721,3.798,722,4.838,723,3.798,724,3.798,725,3.798,726,4.838,727,4.838,728,3.798,729,3.798,730,3.798,731,3.798,732,3.798,733,3.798,734,5.606,735,4.838,736,3.798,737,3.798,738,3.798,739,3.798,740,3.798,741,3.798,742,3.798,743,4.838]],["title/modules.html",[2,1.826]],["body/modules.html",[1,2.859,2,1.917,6,2.561,7,0.029,8,2.561,9,2.102,37,2.859,88,0.029,89,0.029,744,5.942,745,5.942,746,5.942,747,6.073,748,4.486,749,4.486]],["title/overview.html",[750,3.553]],["body/overview.html",[1,3.899,2,1.662,3,2.302,4,3.235,5,3.235,6,3.33,7,0.033,8,3.229,9,2.733,10,2.805,11,2.222,12,2.222,88,0.026,89,0.026,91,2.222,215,2.007,251,1.662,259,2.917,354,2.803,361,2.222,368,2.777,380,3.235,381,3.235,415,3.235,416,3.235,449,2.777,463,3.235,464,3.235,750,3.235,751,4.476,752,3.891]],["title/properties.html",[126,1.475,672,2.192]],["body/properties.html",[7,0.034,88,0.03,89,0.03,119,2.227,126,1.856,451,3.952,753,4.754,754,4.754,755,4.754,756,4.754]],["title/miscellaneous/variables.html",[703,1.36,757,3.141]],["body/miscellaneous/variables.html",[7,0.035,26,0.712,55,2.32,65,1.288,88,0.021,89,0.021,96,0.381,106,1.288,107,1.44,108,1.778,141,2.825,145,2.825,146,1.192,170,2.029,191,2.113,197,1.768,221,1.843,225,2.246,254,0.998,266,1.192,277,0.998,313,1.778,413,2.507,425,2.01,433,1.406,438,2.825,465,2.01,478,2.32,481,3.281,482,2.903,483,2.903,485,1.593,486,2.833,487,2.32,488,2.32,489,2.32,490,2.32,491,2.32,492,2.32,493,2.32,494,2.833,495,3.563,496,2.32,497,2.01,498,2.32,499,2.32,500,2.32,501,2.32,502,2.32,503,2.32,504,2.32,505,2.32,506,2.32,507,3.787,508,2.32,509,4.113,510,2.01,511,2.32,512,2.32,513,2.32,514,2.32,515,2.32,516,2.32,517,2.32,518,2.32,519,2.32,520,2.32,521,2.32,522,2.32,523,2.32,524,2.32,543,1.778,658,2.32,703,1.44,751,2.32,757,2.32,758,4.556,759,2.791,760,2.791,761,2.791,762,2.791,763,2.791,764,2.791]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"interfaces/Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":212,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"coverage.html":{}}}],["0.0.1",{"_index":753,"title":{},"body":{"properties.html":{}}}],["0.0.8",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["0x3",{"_index":246,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["0x8",{"_index":247,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["1",{"_index":313,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["1.18.1",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["1/13",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"miscellaneous/enumerations.html":{}}}],["100",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":243,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["2",{"_index":752,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":354,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4.0.1",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":751,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["5.2.1",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["60000",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":356,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.0",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["_httphealthindicator",{"_index":391,"title":{},"body":{"injectables/HealthService.html":{}}}],["ability",{"_index":554,"title":{},"body":{"injectables/ProxyService.html":{}}}],["abortonerror",{"_index":725,"title":{},"body":{"index.html":{}}}],["accept",{"_index":614,"title":{},"body":{"injectables/ProxyService.html":{}}}],["accessors",{"_index":387,"title":{},"body":{"injectables/HealthService.html":{}}}],["add",{"_index":401,"title":{},"body":{"injectables/HealthService.html":{}}}],["added",{"_index":728,"title":{},"body":{"index.html":{}}}],["allow",{"_index":615,"title":{},"body":{"injectables/ProxyService.html":{}}}],["allowedcookies",{"_index":497,"title":{},"body":{"modules/ProxyModule.html":{},"interfaces/ProxyModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["allowedcookies.indexof(cookie.split('=')[0].trim",{"_index":502,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["any).authtokens.accesstoken",{"_index":584,"title":{},"body":{"injectables/ProxyService.html":{}}}],["api/blob/master/src/health/services/health.service.ts",{"_index":405,"title":{},"body":{"injectables/HealthService.html":{}}}],["apitags",{"_index":370,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('healthchecks",{"_index":372,"title":{},"body":{"controllers/HealthController.html":{}}}],["application",{"_index":720,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":510,"title":{},"body":{"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"miscellaneous/variables.html":{}}}],["application/x",{"_index":512,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["apply",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arbitrary",{"_index":640,"title":{},"body":{"interfaces/Service.html":{}}}],["args",{"_index":531,"title":{},"body":{"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"miscellaneous/functions.html":{}}}],["arguments",{"_index":175,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["array",{"_index":279,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["async",{"_index":266,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["attacks",{"_index":732,"title":{},"body":{"index.html":{}}}],["auth",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["author",{"_index":756,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":611,"title":{},"body":{"injectables/ProxyService.html":{}}}],["available",{"_index":749,"title":{},"body":{"modules.html":{}}}],["await",{"_index":315,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"modules/ProxyModule.html":{}}}],["baseurl",{"_index":596,"title":{},"body":{"injectables/ProxyService.html":{}}}],["bearer",{"_index":612,"title":{},"body":{"injectables/ProxyService.html":{}}}],["body",{"_index":281,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["bodydata",{"_index":509,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":155,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"interfaces/Service.html":{}}}],["bootstrap",{"_index":650,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":747,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":744,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":730,"title":{},"body":{"index.html":{}}}],["buffer.bytelength(bodydata",{"_index":519,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":240,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["cache",{"_index":102,"title":{},"body":{"classes/CacheConfigurationService.html":{},"dependencies.html":{},"index.html":{}}}],["cacheconfigurationservice",{"_index":90,"title":{"classes/CacheConfigurationService.html":{}},"body":{"classes/CacheConfigurationService.html":{},"modules/RedisCachingModule.html":{},"coverage.html":{}}}],["cachemodule",{"_index":632,"title":{},"body":{"modules/RedisCachingModule.html":{}}}],["cachemodule.registerasync",{"_index":634,"title":{},"body":{"modules/RedisCachingModule.html":{}}}],["cachemoduleasyncoptions",{"_index":99,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["cacheoptionsfactory",{"_index":95,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["caching.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["caching.module.ts",{"_index":631,"title":{},"body":{"modules/RedisCachingModule.html":{}}}],["caching/redis",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":460,"title":{},"body":{"controllers/ProxyController.html":{},"injectables/ProxyService.html":{}}}],["callback",{"_index":166,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["callbackfn",{"_index":169,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["calls",{"_index":165,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["case",{"_index":121,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"injectables/ProxyService.html":{}}}],["caseinsensitivemap",{"_index":116,"title":{"classes/CaseInsensitiveMap.html":{}},"body":{"classes/CaseInsensitiveMap.html":{},"injectables/ProxyService.html":{},"coverage.html":{}}}],["catch",{"_index":455,"title":{},"body":{"controllers/ProxyController.html":{}}}],["changeme",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["changeorigin",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":183,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["checkhealth",{"_index":364,"title":{},"body":{"controllers/HealthController.html":{},"injectables/HealthService.html":{}}}],["checkhealth(@res",{"_index":375,"title":{},"body":{"controllers/HealthController.html":{}}}],["checkhealth(res",{"_index":365,"title":{},"body":{"controllers/HealthController.html":{}}}],["checks",{"_index":403,"title":{},"body":{"injectables/HealthService.html":{},"index.html":{}}}],["class",{"_index":80,"title":{"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{}},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":91,"title":{},"body":{"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"overview.html":{}}}],["clear",{"_index":129,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["clears",{"_index":148,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["client",{"_index":263,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["client(options.elasticsearchclientoptions",{"_index":311,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["clientoptions",{"_index":256,"title":{},"body":{"interfaces/ElasticSearchLoggerOptions.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_healthmodule",{"_index":380,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_providers",{"_index":381,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_loggingmodule",{"_index":415,"title":{},"body":{"modules/LoggingModule.html":{},"overview.html":{}}}],["cluster_loggingmodule_exports",{"_index":416,"title":{},"body":{"modules/LoggingModule.html":{},"overview.html":{}}}],["cluster_proxymodule",{"_index":463,"title":{},"body":{"modules/ProxyModule.html":{},"overview.html":{}}}],["cluster_proxymodule_providers",{"_index":464,"title":{},"body":{"modules/ProxyModule.html":{},"overview.html":{}}}],["coffees",{"_index":441,"title":{},"body":{"injectables/ProxyConfigService.html":{}}}],["collection",{"_index":157,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["compression",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["concatpath",{"_index":485,"title":{},"body":{"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["concatpath(...args",{"_index":710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["concatpath(`${proxyreq.protocol}//${proxyreq.host",{"_index":492,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["concatpath(baseurl",{"_index":599,"title":{},"body":{"injectables/ProxyService.html":{}}}],["config",{"_index":440,"title":{},"body":{"injectables/ProxyConfigService.html":{},"interfaces/ProxyModuleOptions.html":{},"modules/RedisCachingModule.html":{},"interfaces/Service.html":{}}}],["config.service",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["config.service.ts",{"_index":429,"title":{},"body":{"injectables/ProxyConfigService.html":{},"coverage.html":{}}}],["config.service.ts:6",{"_index":431,"title":{},"body":{"injectables/ProxyConfigService.html":{}}}],["config.service.ts:9",{"_index":432,"title":{},"body":{"injectables/ProxyConfigService.html":{}}}],["config_options",{"_index":426,"title":{},"body":{"modules/LoggingModule.html":{}}}],["configmodule",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{}}}],["configmodule.forroot",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":100,"title":{},"body":{"classes/CacheConfigurationService.html":{},"injectables/HealthService.html":{},"injectables/ProxyConfigService.html":{}}}],["configservice.get('cache_max_items_in_cache",{"_index":115,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["configservice.get('cache_ttl_in_seconds",{"_index":113,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["configservice.get('redis_host",{"_index":110,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["configservice.get('redis_port",{"_index":112,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["configuration",{"_index":544,"title":{},"body":{"interfaces/ProxyModuleOptions.html":{},"interfaces/Service.html":{}}}],["configuration.service.ts",{"_index":93,"title":{},"body":{"classes/CacheConfigurationService.html":{},"coverage.html":{}}}],["configuration.service.ts:6",{"_index":98,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["configure",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["console.debug(`[${req.method",{"_index":412,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.debug(`[${res.statuscode",{"_index":414,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(`[${this.options.name",{"_index":332,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["const",{"_index":191,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"classes/ElasticSearchLoggerService.html":{},"controllers/HealthController.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"classes/ElasticSearchLoggerService.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ProxyConfigService.html":{},"injectables/ProxyService.html":{}}}],["constructor(configservice",{"_index":389,"title":{},"body":{"injectables/HealthService.html":{},"injectables/ProxyConfigService.html":{}}}],["constructor(iterable",{"_index":136,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["constructor(logger",{"_index":407,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["constructor(options",{"_index":275,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["constructor(private",{"_index":374,"title":{},"body":{"controllers/HealthController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{}}}],["constructor(proxy",{"_index":562,"title":{},"body":{"injectables/ProxyService.html":{}}}],["consumer",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["content",{"_index":613,"title":{},"body":{"injectables/ProxyService.html":{}}}],["contenttype",{"_index":507,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":359,"title":{"controllers/HealthController.html":{},"controllers/ProxyController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/ProxyController.html":{},"coverage.html":{},"index.html":{}}}],["controller('health",{"_index":373,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":361,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"overview.html":{}}}],["convert",{"_index":144,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["converts",{"_index":139,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["cookie",{"_index":501,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["cookies",{"_index":495,"title":{},"body":{"modules/ProxyModule.html":{},"interfaces/ProxyModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["correlation",{"_index":230,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"index.html":{}}}],["correlationheader",{"_index":228,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["correlationid",{"_index":743,"title":{},"body":{"index.html":{}}}],["correlationidmiddleware",{"_index":41,"title":{"injectables/CorrelationIdMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/CorrelationIdMiddleware.html":{},"coverage.html":{}}}],["coverage",{"_index":641,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":551,"title":{},"body":{"interfaces/ProxyModuleOptionsFactory.html":{}}}],["createasyncoptionsprovider",{"_index":466,"title":{},"body":{"modules/ProxyModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":467,"title":{},"body":{"modules/ProxyModule.html":{}}}],["createasyncproviders",{"_index":471,"title":{},"body":{"modules/ProxyModule.html":{}}}],["createasyncproviders(options",{"_index":472,"title":{},"body":{"modules/ProxyModule.html":{}}}],["createcacheoptions",{"_index":97,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["createindexifnotexists",{"_index":267,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["createindexifnotexists(index",{"_index":280,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["createmoduleconfig",{"_index":430,"title":{},"body":{"injectables/ProxyConfigService.html":{},"interfaces/ProxyModuleOptionsFactory.html":{}}}],["createproxyserver",{"_index":478,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":193,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["daily",{"_index":357,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":319,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["date().toisostring().slice(0",{"_index":358,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{}}}],["debug",{"_index":268,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["debug(message",{"_index":283,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["decorators",{"_index":366,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ProxyController.html":{}}}],["deep",{"_index":621,"title":{},"body":{"injectables/ProxyService.html":{}}}],["default",{"_index":145,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"injectables/ProxyService.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":608,"title":{},"body":{"injectables/ProxyService.html":{}}}],["defaultoptions.headers",{"_index":619,"title":{},"body":{"injectables/ProxyService.html":{}}}],["defaultproxyoptions",{"_index":481,"title":{},"body":{"modules/ProxyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{}}}],["delete",{"_index":130,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["delete(key",{"_index":149,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":343,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["description",{"_index":119,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"properties.html":{}}}],["detects",{"_index":182,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["determines",{"_index":542,"title":{},"body":{"interfaces/ProxyModuleOptions.html":{},"interfaces/Service.html":{}}}],["direction",{"_index":741,"title":{},"body":{"index.html":{}}}],["disable",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/CorrelationIdMiddleware.html":{},"modules/LoggingModule.html":{}}}],["disabling",{"_index":724,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":392,"title":{},"body":{"injectables/HealthService.html":{}}}],["documentation",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["dynamicmodule",{"_index":422,"title":{},"body":{"modules/LoggingModule.html":{},"modules/ProxyModule.html":{}}}],["each",{"_index":167,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["econnreset",{"_index":625,"title":{},"body":{"injectables/ProxyService.html":{}}}],["elastic",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["elastic/elasticsearch",{"_index":257,"title":{},"body":{"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"dependencies.html":{}}}],["elasticsearchclientoptions",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ElasticSearchLoggerOptions.html":{}}}],["elasticsearchloggeroptions",{"_index":250,"title":{"interfaces/ElasticSearchLoggerOptions.html":{}},"body":{"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"modules/LoggingModule.html":{},"coverage.html":{}}}],["elasticsearchloggerservice",{"_index":259,"title":{"classes/ElasticSearchLoggerService.html":{}},"body":{"classes/ElasticSearchLoggerService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"coverage.html":{},"overview.html":{}}}],["elasticsearchloggerutilities",{"_index":307,"title":{"classes/ElasticSearchLoggerUtilities.html":{}},"body":{"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"coverage.html":{}}}],["elasticsearchloggerutilities.getrollingindex",{"_index":325,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["element",{"_index":172,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["endpoint",{"_index":558,"title":{},"body":{"injectables/ProxyService.html":{},"interfaces/Service.html":{}}}],["entries",{"_index":131,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["enum",{"_index":352,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{}}}],["enumerations",{"_index":704,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":456,"title":{},"body":{"controllers/ProxyController.html":{},"injectables/ProxyService.html":{}}}],["err.code",{"_index":624,"title":{},"body":{"injectables/ProxyService.html":{}}}],["error",{"_index":269,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"controllers/ProxyController.html":{},"injectables/ProxyService.html":{},"index.html":{}}}],["error(message",{"_index":288,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["eslint",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/CorrelationIdMiddleware.html":{},"modules/LoggingModule.html":{}}}],["execute",{"_index":171,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["executeproxy",{"_index":560,"title":{},"body":{"injectables/ProxyService.html":{}}}],["executeproxy(req",{"_index":564,"title":{},"body":{"injectables/ProxyService.html":{}}}],["exit",{"_index":721,"title":{},"body":{"index.html":{}}}],["export",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"interfaces/Service.html":{}}}],["exports",{"_index":418,"title":{},"body":{"modules/LoggingModule.html":{},"modules/RedisCachingModule.html":{}}}],["express",{"_index":227,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"controllers/HealthController.html":{},"injectables/LoggerMiddleware.html":{},"controllers/ProxyController.html":{},"injectables/ProxyService.html":{},"dependencies.html":{}}}],["extend",{"_index":622,"title":{},"body":{"injectables/ProxyService.html":{}}}],["extends",{"_index":125,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"interfaces/ProxyModuleAsyncOptions.html":{}}}],["factory",{"_index":541,"title":{},"body":{"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{}}}],["factory.ts",{"_index":549,"title":{},"body":{"interfaces/ProxyModuleOptionsFactory.html":{},"coverage.html":{}}}],["factory.ts:10",{"_index":550,"title":{},"body":{"interfaces/ProxyModuleOptionsFactory.html":{}}}],["false",{"_index":601,"title":{},"body":{"injectables/ProxyService.html":{}}}],["ffdc",{"_index":435,"title":{},"body":{"injectables/ProxyConfigService.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"interfaces/Service.html":{},"coverage.html":{}}}],["filter",{"_index":500,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["find",{"_index":603,"title":{},"body":{"injectables/ProxyService.html":{}}}],["force",{"_index":731,"title":{},"body":{"index.html":{}}}],["foreach",{"_index":132,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["foreach(callbackfn",{"_index":159,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["form",{"_index":514,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["forroot",{"_index":419,"title":{},"body":{"modules/LoggingModule.html":{},"modules/ProxyModule.html":{}}}],["forroot(options",{"_index":420,"title":{},"body":{"modules/LoggingModule.html":{},"modules/ProxyModule.html":{}}}],["forrootasync",{"_index":475,"title":{},"body":{"modules/ProxyModule.html":{}}}],["forrootasync(options",{"_index":476,"title":{},"body":{"modules/ProxyModule.html":{}}}],["forroutes",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["forwarded",{"_index":637,"title":{},"body":{"interfaces/Service.html":{}}}],["forwardtoken",{"_index":636,"title":{},"body":{"interfaces/Service.html":{}}}],["function",{"_index":170,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":706,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":733,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":176,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["getbaseurl",{"_index":574,"title":{},"body":{"injectables/ProxyService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getbaseurl(path",{"_index":711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getbaseurl(target",{"_index":609,"title":{},"body":{"injectables/ProxyService.html":{}}}],["gethttphealthindicator",{"_index":396,"title":{},"body":{"injectables/HealthService.html":{}}}],["getlatest",{"_index":270,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["getlatest(index",{"_index":290,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["getrollingindex",{"_index":347,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{}}}],["getrollingindex(prefix",{"_index":348,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{}}}],["getting",{"_index":716,"title":{"index.html":{}},"body":{}}],["given",{"_index":153,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"injectables/ProxyService.html":{}}}],["global",{"_index":633,"title":{},"body":{"modules/RedisCachingModule.html":{}}}],["graph",{"_index":748,"title":{},"body":{"modules.html":{}}}],["handler",{"_index":298,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["has(key",{"_index":180,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["headers",{"_index":610,"title":{},"body":{"injectables/ProxyService.html":{}}}],["health",{"_index":363,"title":{},"body":{"controllers/HealthController.html":{},"injectables/HealthService.html":{},"index.html":{}}}],["health/health.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheckservice",{"_index":390,"title":{},"body":{"injectables/HealthService.html":{}}}],["healthcontroller",{"_index":360,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":6,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["healthservice",{"_index":368,"title":{"injectables/HealthService.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":109,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["hostname",{"_index":320,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["http",{"_index":479,"title":{},"body":{"modules/ProxyModule.html":{},"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"dependencies.html":{}}}],["http://localhost:9200",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["http_proxy",{"_index":482,"title":{},"body":{"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httphealthindicator",{"_index":388,"title":{},"body":{"injectables/HealthService.html":{}}}],["httpproxy",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://api.sampleapis.com/coffee/hot",{"_index":442,"title":{},"body":{"injectables/ProxyConfigService.html":{}}}],["https://api.sampleapis.com/wines/reds",{"_index":439,"title":{},"body":{"injectables/ProxyConfigService.html":{}}}],["https://github.com/otasoft/otasoft",{"_index":404,"title":{},"body":{"injectables/HealthService.html":{}}}],["id",{"_index":231,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"injectables/ProxyConfigService.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"index.html":{}}}],["id.middleware",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["id.middleware.ts",{"_index":217,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"coverage.html":{}}}],["id.middleware.ts:5",{"_index":224,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["identifier",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["if(req.hasownproperty('user",{"_index":582,"title":{},"body":{"injectables/ProxyService.html":{}}}],["if(target",{"_index":586,"title":{},"body":{"injectables/ProxyService.html":{}}}],["implements",{"_index":94,"title":{},"body":{"classes/CacheConfigurationService.html":{},"injectables/CorrelationIdMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ProxyConfigService.html":{}}}],["import",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"interfaces/Service.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"modules/HealthModule.html":{},"modules/ProxyModule.html":{},"modules/RedisCachingModule.html":{}}}],["incoming",{"_index":555,"title":{},"body":{"injectables/ProxyService.html":{}}}],["index",{"_index":96,"title":{"index.html":{}},"body":{"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexcache",{"_index":264,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["indexprefix",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ElasticSearchLoggerOptions.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"interfaces/Service.html":{}}}],["info(message",{"_index":293,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["inject",{"_index":107,"title":{},"body":{"classes/CacheConfigurationService.html":{},"classes/ElasticSearchLoggerService.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"injectables/ProxyService.html":{},"miscellaneous/variables.html":{}}}],["inject('config_options",{"_index":309,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["inject(http_proxy",{"_index":576,"title":{},"body":{"injectables/ProxyService.html":{}}}],["inject(proxy_module_options",{"_index":577,"title":{},"body":{"injectables/ProxyService.html":{}}}],["injectable",{"_index":214,"title":{"injectables/CorrelationIdMiddleware.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ProxyConfigService.html":{},"injectables/ProxyService.html":{}},"body":{"injectables/CorrelationIdMiddleware.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ProxyConfigService.html":{},"injectables/ProxyService.html":{},"coverage.html":{}}}],["injectables",{"_index":215,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ProxyConfigService.html":{},"injectables/ProxyService.html":{},"overview.html":{}}}],["insensitive",{"_index":122,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map",{"_index":575,"title":{},"body":{"injectables/ProxyService.html":{}}}],["insensitive.map.ts",{"_index":118,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"coverage.html":{}}}],["insensitive.map.ts:100",{"_index":162,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map.ts:114",{"_index":188,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map.ts:26",{"_index":186,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map.ts:39",{"_index":177,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map.ts:5",{"_index":138,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map.ts:50",{"_index":181,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map.ts:61",{"_index":151,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map.ts:72",{"_index":147,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map.ts:81",{"_index":184,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["insensitive.map.ts:88",{"_index":156,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["instance",{"_index":194,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"injectables/ProxyService.html":{}}}],["instead",{"_index":723,"title":{},"body":{"index.html":{}}}],["interface",{"_index":249,"title":{"interfaces/ElasticSearchLoggerOptions.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"interfaces/Service.html":{}},"body":{"interfaces/ElasticSearchLoggerOptions.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"interfaces/Service.html":{},"coverage.html":{}}}],["interfaces",{"_index":251,"title":{},"body":{"interfaces/ElasticSearchLoggerOptions.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"overview.html":{}}}],["interfaces/elastic",{"_index":306,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"modules/LoggingModule.html":{}}}],["isabsolute",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isabsolute(path",{"_index":712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isglobal",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["iterable",{"_index":137,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["iterableiterator",{"_index":158,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["iterates",{"_index":163,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["join",{"_index":503,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["join.ts",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["json.stringify(message",{"_index":333,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["json.stringify(req['body",{"_index":511,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":140,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["key.tolowercase",{"_index":198,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["keylowercase",{"_index":195,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["keys",{"_index":133,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["keysmap",{"_index":128,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["keyword",{"_index":322,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["length",{"_index":518,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":299,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["license",{"_index":754,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["limiting",{"_index":727,"title":{},"body":{"index.html":{}}}],["line",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/CorrelationIdMiddleware.html":{}}}],["log",{"_index":271,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["log(level",{"_index":295,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger",{"_index":254,"title":{},"body":{"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('proxy",{"_index":487,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["logger(proxycontroller.name",{"_index":452,"title":{},"body":{"controllers/ProxyController.html":{}}}],["logger(proxyservice.name",{"_index":573,"title":{},"body":{"injectables/ProxyService.html":{}}}],["logger.log(`received",{"_index":524,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["logger.log(`sending",{"_index":493,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["logger.service",{"_index":424,"title":{},"body":{"modules/LoggingModule.html":{}}}],["logger.service.ts",{"_index":261,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"coverage.html":{}}}],["logger.service.ts:106",{"_index":294,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:110",{"_index":289,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:114",{"_index":285,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:118",{"_index":305,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:122",{"_index":303,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:126",{"_index":291,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:18",{"_index":282,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:53",{"_index":296,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:8",{"_index":278,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:84",{"_index":301,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.service.ts:9",{"_index":276,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["logger.utiltiies.ts",{"_index":345,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["logger.utiltiies.ts:8",{"_index":350,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{}}}],["loggermiddleware",{"_index":44,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["logging",{"_index":734,"title":{},"body":{"index.html":{}}}],["logging/logging.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["logging/utilities",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["loggingmodule",{"_index":8,"title":{"modules/LoggingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggingModule.html":{},"modules.html":{},"overview.html":{}}}],["loggingmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["lookup",{"_index":571,"title":{},"body":{"injectables/ProxyService.html":{}}}],["lr",{"_index":742,"title":{},"body":{"index.html":{}}}],["make",{"_index":587,"title":{},"body":{"injectables/ProxyService.html":{}}}],["making",{"_index":459,"title":{},"body":{"controllers/ProxyController.html":{}}}],["manager",{"_index":103,"title":{},"body":{"classes/CacheConfigurationService.html":{},"dependencies.html":{}}}],["map",{"_index":123,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["mappings",{"_index":318,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["matching",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"interfaces/Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":242,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["max",{"_index":114,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["memoryhealthindicator",{"_index":393,"title":{},"body":{"injectables/HealthService.html":{}}}],["message",{"_index":286,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["metadata",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{}}}],["middleware",{"_index":735,"title":{},"body":{"index.html":{}}}],["middleware/correlation",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/logger.middleware",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":703,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":349,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{}}}],["model",{"_index":736,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{},"modules/RedisCachingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"coverage.html":{}}}],["modulemetadata",{"_index":539,"title":{},"body":{"interfaces/ProxyModuleAsyncOptions.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{},"modules/RedisCachingModule.html":{},"modules.html":{},"overview.html":{}}}],["monthly",{"_index":355,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{},"miscellaneous/enumerations.html":{}}}],["more",{"_index":402,"title":{},"body":{"injectables/HealthService.html":{}}}],["msg",{"_index":457,"title":{},"body":{"controllers/ProxyController.html":{}}}],["name",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["nested",{"_index":323,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["nestjs/axios",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"injectables/CorrelationIdMiddleware.html":{},"classes/ElasticSearchLoggerService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":540,"title":{},"body":{"interfaces/ProxyModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"injectables/HealthService.html":{},"injectables/ProxyConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["nestjs/elasticsearch",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":371,"title":{},"body":{"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":385,"title":{},"body":{"modules/HealthModule.html":{},"injectables/HealthService.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":226,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["nestrequest",{"_index":448,"title":{},"body":{"controllers/ProxyController.html":{}}}],["new",{"_index":146,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/CorrelationIdMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["nextfunction",{"_index":223,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["nodes",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["normalize",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(strarray",{"_index":713,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notes",{"_index":718,"title":{},"body":{"index.html":{}}}],["npy",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["null",{"_index":581,"title":{},"body":{"injectables/ProxyService.html":{}}}],["object",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(req['body']).length",{"_index":506,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":458,"title":{},"body":{"controllers/ProxyController.html":{},"injectables/ProxyService.html":{}}}],["ok",{"_index":399,"title":{},"body":{"injectables/HealthService.html":{}}}],["optional",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":277,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.allowedcookies",{"_index":498,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["options.config",{"_index":488,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["options.headers",{"_index":620,"title":{},"body":{"injectables/ProxyService.html":{}}}],["options.imports",{"_index":525,"title":{},"body":{"modules/ProxyModule.html":{}}}],["options.inject",{"_index":533,"title":{},"body":{"modules/ProxyModule.html":{}}}],["options.ts",{"_index":255,"title":{},"body":{"interfaces/ElasticSearchLoggerOptions.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"coverage.html":{}}}],["options.useclass",{"_index":530,"title":{},"body":{"modules/ProxyModule.html":{}}}],["options.useexisting",{"_index":527,"title":{},"body":{"modules/ProxyModule.html":{}}}],["options.usefactory",{"_index":528,"title":{},"body":{"modules/ProxyModule.html":{}}}],["options.usefactory(...args",{"_index":532,"title":{},"body":{"modules/ProxyModule.html":{}}}],["optionsfactory",{"_index":534,"title":{},"body":{"modules/ProxyModule.html":{}}}],["optionsfactory.createmoduleconfig",{"_index":535,"title":{},"body":{"modules/ProxyModule.html":{}}}],["opts",{"_index":491,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":342,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"index.html":{}}}],["os",{"_index":308,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["os.hostname",{"_index":330,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{},"overview.html":{}}}],["outgoing",{"_index":568,"title":{},"body":{"injectables/ProxyService.html":{}}}],["over",{"_index":164,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["overriding",{"_index":616,"title":{},"body":{"injectables/ProxyService.html":{}}}],["overview",{"_index":750,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":672,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pair",{"_index":168,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["pairs",{"_index":142,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["param",{"_index":189,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"classes/ElasticSearchLoggerService.html":{},"controllers/ProxyController.html":{},"injectables/ProxyService.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":446,"title":{},"body":{"controllers/ProxyController.html":{},"injectables/ProxyService.html":{}}}],["params[0",{"_index":585,"title":{},"body":{"injectables/ProxyService.html":{}}}],["passed",{"_index":545,"title":{},"body":{"interfaces/ProxyModuleOptions.html":{}}}],["password",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":450,"title":{},"body":{"controllers/ProxyController.html":{},"miscellaneous/functions.html":{}}}],["performs",{"_index":567,"title":{},"body":{"injectables/ProxyService.html":{}}}],["pick",{"_index":537,"title":{},"body":{"interfaces/ProxyModuleAsyncOptions.html":{}}}],["port",{"_index":111,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["prefix",{"_index":351,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"injectables/ProxyService.html":{}}}],["prettier/prettier",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/CorrelationIdMiddleware.html":{},"modules/LoggingModule.html":{}}}],["prevent",{"_index":729,"title":{},"body":{"index.html":{}}}],["primary",{"_index":297,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["private",{"_index":127,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"classes/ElasticSearchLoggerService.html":{},"injectables/HealthService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{}}}],["promise",{"_index":287,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{}}}],["properties",{"_index":126,"title":{"properties.html":{}},"body":{"classes/CaseInsensitiveMap.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"properties.html":{}}}],["provide",{"_index":425,"title":{},"body":{"modules/LoggingModule.html":{},"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":470,"title":{},"body":{"modules/ProxyModule.html":{}}}],["providers",{"_index":383,"title":{},"body":{"modules/HealthModule.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{}}}],["provides",{"_index":120,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"injectables/ProxyService.html":{}}}],["proxy",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["proxy(response",{"_index":445,"title":{},"body":{"controllers/ProxyController.html":{}}}],["proxy.constants",{"_index":484,"title":{},"body":{"modules/ProxyModule.html":{},"injectables/ProxyService.html":{}}}],["proxy.on('proxyreq",{"_index":489,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxy.on('proxyres",{"_index":521,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxy/proxy.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["proxy_module_options",{"_index":483,"title":{},"body":{"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["proxyconfigservice",{"_index":47,"title":{"injectables/ProxyConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ProxyConfigService.html":{},"coverage.html":{}}}],["proxycontroller",{"_index":443,"title":{"controllers/ProxyController.html":{}},"body":{"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"coverage.html":{}}}],["proxyfactory",{"_index":486,"title":{},"body":{"modules/ProxyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["proxying",{"_index":547,"title":{},"body":{"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{}}}],["proxymiddleware",{"_index":738,"title":{},"body":{"index.html":{}}}],["proxymodule",{"_index":9,"title":{"modules/ProxyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"modules.html":{},"overview.html":{}}}],["proxymodule.forrootasync",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["proxymoduleasyncoptions",{"_index":468,"title":{"interfaces/ProxyModuleAsyncOptions.html":{}},"body":{"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"coverage.html":{}}}],["proxymoduleoptions",{"_index":433,"title":{"interfaces/ProxyModuleOptions.html":{}},"body":{"injectables/ProxyConfigService.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["proxymoduleoptionsfactory",{"_index":434,"title":{"interfaces/ProxyModuleOptionsFactory.html":{}},"body":{"injectables/ProxyConfigService.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"coverage.html":{}}}],["proxyreq",{"_index":490,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxyreq.getheader('content",{"_index":508,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxyreq.getheader('cookie",{"_index":496,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxyreq.setheader('content",{"_index":517,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxyreq.setheader('cookie",{"_index":504,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxyreq.write(bodydata",{"_index":520,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxyrequest",{"_index":561,"title":{},"body":{"injectables/ProxyService.html":{}}}],["proxyrequest(req",{"_index":569,"title":{},"body":{"injectables/ProxyService.html":{}}}],["proxyres",{"_index":522,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxyres['req'].protocol}//${proxyres['req'].host",{"_index":523,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["proxyservice",{"_index":449,"title":{"injectables/ProxyService.html":{}},"body":{"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"coverage.html":{},"overview.html":{}}}],["public",{"_index":265,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"injectables/HealthService.html":{},"modules/LoggingModule.html":{}}}],["querystring",{"_index":480,"title":{},"body":{"modules/ProxyModule.html":{}}}],["querystring.stringify(req['body",{"_index":516,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["r",{"_index":241,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["rate",{"_index":726,"title":{},"body":{"index.html":{}}}],["raw",{"_index":272,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["raw(message",{"_index":300,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["readonly",{"_index":262,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/ProxyController.html":{},"injectables/ProxyService.html":{}}}],["redis",{"_index":104,"title":{},"body":{"classes/CacheConfigurationService.html":{},"dependencies.html":{},"index.html":{}}}],["rediscachingmodule",{"_index":37,"title":{"modules/RedisCachingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisCachingModule.html":{},"modules.html":{}}}],["redisstore",{"_index":101,"title":{},"body":{"classes/CacheConfigurationService.html":{}}}],["reflect",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":154,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["removes",{"_index":152,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["represents",{"_index":639,"title":{},"body":{"interfaces/Service.html":{}}}],["req",{"_index":225,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"miscellaneous/variables.html":{}}}],["req.header('x",{"_index":229,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["req.headers['x",{"_index":233,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["req.method",{"_index":494,"title":{},"body":{"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"miscellaneous/variables.html":{}}}],["req.query.serviceid",{"_index":580,"title":{},"body":{"injectables/ProxyService.html":{}}}],["req.query.target",{"_index":578,"title":{},"body":{"injectables/ProxyService.html":{}}}],["req.url",{"_index":413,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"miscellaneous/variables.html":{}}}],["req['body",{"_index":505,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["req['user",{"_index":583,"title":{},"body":{"injectables/ProxyService.html":{}}}],["request",{"_index":220,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"controllers/ProxyController.html":{},"injectables/ProxyService.html":{}}}],["requestoptions",{"_index":617,"title":{},"body":{"injectables/ProxyService.html":{}}}],["requestoptions.headers",{"_index":618,"title":{},"body":{"injectables/ProxyService.html":{}}}],["res",{"_index":221,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"controllers/HealthController.html":{},"injectables/LoggerMiddleware.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"miscellaneous/variables.html":{}}}],["res.contenttype('application/json",{"_index":378,"title":{},"body":{"controllers/HealthController.html":{}}}],["res.end('an",{"_index":629,"title":{},"body":{"injectables/ProxyService.html":{}}}],["res.send(json.stringify(result",{"_index":379,"title":{},"body":{"controllers/HealthController.html":{}}}],["res.setheader('x",{"_index":234,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["res.status(404).send",{"_index":604,"title":{},"body":{"injectables/ProxyService.html":{}}}],["res.status(500).send",{"_index":590,"title":{},"body":{"injectables/ProxyService.html":{}}}],["res.writehead(500",{"_index":627,"title":{},"body":{"injectables/ProxyService.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{},"overview.html":{}}}],["response",{"_index":222,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"controllers/HealthController.html":{},"injectables/LoggerMiddleware.html":{},"controllers/ProxyController.html":{},"injectables/ProxyService.html":{}}}],["response.status(500).send",{"_index":461,"title":{},"body":{"controllers/ProxyController.html":{}}}],["result",{"_index":314,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"controllers/HealthController.html":{}}}],["result._id",{"_index":334,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["results",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"interfaces/Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":106,"title":{},"body":{"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"injectables/HealthService.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{}}}],["rimraf",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["rolling_index_mode",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"miscellaneous/enumerations.html":{}}}],["rolling_index_mode.monthly",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["rollingoffsetmode",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ElasticSearchLoggerOptions.html":{}}}],["route",{"_index":572,"title":{},"body":{"injectables/ProxyService.html":{}}}],["rxjs",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":253,"title":{},"body":{"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"modules/LoggingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["server",{"_index":548,"title":{},"body":{"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{}}}],["server.serveroptions",{"_index":543,"title":{},"body":{"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":546,"title":{"interfaces/Service.html":{}},"body":{"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"coverage.html":{}}}],["service.config",{"_index":602,"title":{},"body":{"injectables/ProxyService.html":{}}}],["service.forwardtoken",{"_index":600,"title":{},"body":{"injectables/ProxyService.html":{}}}],["service.id",{"_index":593,"title":{},"body":{"injectables/ProxyService.html":{}}}],["service.url",{"_index":597,"title":{},"body":{"injectables/ProxyService.html":{}}}],["serviceid",{"_index":579,"title":{},"body":{"injectables/ProxyService.html":{}}}],["services",{"_index":369,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{}}}],["services.get(serviceid",{"_index":595,"title":{},"body":{"injectables/ProxyService.html":{}}}],["services.has(serviceid",{"_index":594,"title":{},"body":{"injectables/ProxyService.html":{}}}],["services/elastic",{"_index":423,"title":{},"body":{"modules/LoggingModule.html":{}}}],["services/proxy",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":134,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["set(key",{"_index":185,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["sort",{"_index":341,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"injectables/ProxyService.html":{},"modules/RedisCachingModule.html":{},"interfaces/Service.html":{}}}],["split",{"_index":499,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["src/.../elastic",{"_index":705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../proxy.constants.ts",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../proxy.module.ts",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../url",{"_index":709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../url.utilities.ts",{"_index":708,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:42",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["src/caching/config/cache",{"_index":92,"title":{},"body":{"classes/CacheConfigurationService.html":{},"coverage.html":{}}}],["src/caching/redis",{"_index":630,"title":{},"body":{"modules/RedisCachingModule.html":{}}}],["src/health/controllers/health.controller.ts",{"_index":362,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/controllers/health.controller.ts:12",{"_index":367,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":382,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/health/services/health.service.ts",{"_index":386,"title":{},"body":{"injectables/HealthService.html":{},"coverage.html":{}}}],["src/health/services/health.service.ts:12",{"_index":397,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/health/services/health.service.ts:14",{"_index":394,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/health/services/health.service.ts:23",{"_index":395,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/logging/interfaces/elastic",{"_index":252,"title":{},"body":{"interfaces/ElasticSearchLoggerOptions.html":{},"coverage.html":{}}}],["src/logging/logging.module.ts",{"_index":417,"title":{},"body":{"modules/LoggingModule.html":{}}}],["src/logging/logging.module.ts:14",{"_index":421,"title":{},"body":{"modules/LoggingModule.html":{}}}],["src/logging/services",{"_index":410,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/logging/services/elastic",{"_index":260,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"coverage.html":{}}}],["src/logging/utilities/elastic",{"_index":344,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":649,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/correlation",{"_index":216,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"coverage.html":{}}}],["src/middleware/logger.middleware.ts",{"_index":406,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/middleware/logger.middleware.ts:5",{"_index":408,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/middleware/logger.middleware.ts:8",{"_index":409,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/proxy/controllers/proxy.controller.ts",{"_index":444,"title":{},"body":{"controllers/ProxyController.html":{},"coverage.html":{}}}],["src/proxy/controllers/proxy.controller.ts:22",{"_index":447,"title":{},"body":{"controllers/ProxyController.html":{}}}],["src/proxy/interfaces/proxy",{"_index":536,"title":{},"body":{"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"interfaces/ProxyModuleOptionsFactory.html":{},"coverage.html":{}}}],["src/proxy/interfaces/service.ts",{"_index":635,"title":{},"body":{"interfaces/Service.html":{},"coverage.html":{}}}],["src/proxy/proxy.constants.ts",{"_index":658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/proxy/proxy.module.ts",{"_index":465,"title":{},"body":{"modules/ProxyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/proxy/proxy.module.ts:101",{"_index":473,"title":{},"body":{"modules/ProxyModule.html":{}}}],["src/proxy/proxy.module.ts:116",{"_index":469,"title":{},"body":{"modules/ProxyModule.html":{}}}],["src/proxy/proxy.module.ts:81",{"_index":474,"title":{},"body":{"modules/ProxyModule.html":{}}}],["src/proxy/proxy.module.ts:93",{"_index":477,"title":{},"body":{"modules/ProxyModule.html":{}}}],["src/proxy/services/case",{"_index":117,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"coverage.html":{}}}],["src/proxy/services/proxy.service.ts",{"_index":553,"title":{},"body":{"injectables/ProxyService.html":{},"coverage.html":{}}}],["src/proxy/services/proxy.service.ts:15",{"_index":563,"title":{},"body":{"injectables/ProxyService.html":{}}}],["src/proxy/services/proxy.service.ts:34",{"_index":570,"title":{},"body":{"injectables/ProxyService.html":{}}}],["src/proxy/services/proxy.service.ts:91",{"_index":566,"title":{},"body":{"injectables/ProxyService.html":{}}}],["src/proxy/utilities/url",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/proxy/utilities/url.utilities.ts",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/services/proxy",{"_index":428,"title":{},"body":{"injectables/ProxyConfigService.html":{},"coverage.html":{}}}],["started",{"_index":717,"title":{"index.html":{}},"body":{}}],["startup",{"_index":719,"title":{},"body":{"index.html":{}}}],["statediagram",{"_index":739,"title":{},"body":{"index.html":{}}}],["statements",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":346,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{}}}],["status",{"_index":376,"title":{},"body":{"controllers/HealthController.html":{}}}],["stdout",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ElasticSearchLoggerOptions.html":{}}}],["store",{"_index":105,"title":{},"body":{"classes/CacheConfigurationService.html":{},"dependencies.html":{}}}],["strarray",{"_index":714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":197,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"injectables/HealthService.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":124,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["super",{"_index":190,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["super.clear",{"_index":208,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["super.delete(keylowercase",{"_index":206,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["super.get(key",{"_index":202,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["super.get(key.tolowercase",{"_index":201,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["super.has(key",{"_index":204,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["super.has(key.tolowercase",{"_index":203,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["super.set(keylowercase",{"_index":200,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["super.values",{"_index":211,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["support",{"_index":745,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":746,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["synchronously",{"_index":552,"title":{},"body":{"interfaces/ProxyModuleOptionsFactory.html":{}}}],["t",{"_index":284,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["table",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":173,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["target",{"_index":557,"title":{},"body":{"injectables/ProxyService.html":{},"interfaces/Service.html":{}}}],["terminusmodule",{"_index":384,"title":{},"body":{"modules/HealthModule.html":{}}}],["text",{"_index":321,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["text/plain",{"_index":628,"title":{},"body":{"injectables/ProxyService.html":{}}}],["this._httphealthindicator",{"_index":398,"title":{},"body":{"injectables/HealthService.html":{}}}],["this.client",{"_index":310,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.client.index",{"_index":329,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.client.indices.create",{"_index":317,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.client.indices.exists",{"_index":316,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.client.search",{"_index":340,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.configservice.get('ffdc",{"_index":436,"title":{},"body":{"injectables/ProxyConfigService.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":529,"title":{},"body":{"modules/ProxyModule.html":{}}}],["this.createasyncproviders(options",{"_index":526,"title":{},"body":{"modules/ProxyModule.html":{}}}],["this.createindexifnotexists(index",{"_index":328,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.entries",{"_index":213,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["this.executeproxy",{"_index":598,"title":{},"body":{"injectables/ProxyService.html":{}}}],["this.healthservice.checkhealth",{"_index":377,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.indexcache.indexof(index",{"_index":312,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.indexcache.push(index",{"_index":324,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.keysmap.clear",{"_index":207,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["this.keysmap.delete(keylowercase",{"_index":205,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["this.keysmap.set(keylowercase",{"_index":199,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["this.keysmap.values",{"_index":209,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["this.log('debug",{"_index":337,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.log('error",{"_index":336,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.log('info",{"_index":335,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.log('trace",{"_index":339,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.log('warning",{"_index":338,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.logger.error",{"_index":626,"title":{},"body":{"injectables/ProxyService.html":{}}}],["this.logger.error(\"could",{"_index":605,"title":{},"body":{"injectables/ProxyService.html":{}}}],["this.logger.error(msg",{"_index":462,"title":{},"body":{"controllers/ProxyController.html":{}}}],["this.logger.info(req.url",{"_index":411,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.logger.warn(error",{"_index":589,"title":{},"body":{"injectables/ProxyService.html":{}}}],["this.options.indexprefix",{"_index":326,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.options.rollingoffsetmode",{"_index":327,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.options.services",{"_index":591,"title":{},"body":{"injectables/ProxyService.html":{}}}],["this.options.services.map((service",{"_index":592,"title":{},"body":{"injectables/ProxyService.html":{}}}],["this.options.stdout",{"_index":331,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["this.proxy.web(req",{"_index":623,"title":{},"body":{"injectables/ProxyService.html":{}}}],["this.proxyservice.proxyrequest(request",{"_index":454,"title":{},"body":{"controllers/ProxyController.html":{}}}],["this.set(key",{"_index":192,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["three",{"_index":174,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["throttlermodule",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":722,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tkey",{"_index":150,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["tkey,map",{"_index":161,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["todo",{"_index":400,"title":{},"body":{"injectables/HealthService.html":{},"index.html":{}}}],["token",{"_index":565,"title":{},"body":{"injectables/ProxyService.html":{},"interfaces/Service.html":{}}}],["trace",{"_index":273,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["trace(message",{"_index":302,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["traffic",{"_index":556,"title":{},"body":{"injectables/ProxyService.html":{}}}],["transformer",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":453,"title":{},"body":{"controllers/ProxyController.html":{}}}],["ttl",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/CacheConfigurationService.html":{}}}],["tval",{"_index":178,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["tval,key",{"_index":160,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["type",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"classes/ElasticSearchLoggerUtilities.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggingModule.html":{},"injectables/ProxyConfigService.html":{},"controllers/ProxyController.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":196,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["ui",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"miscellaneous/functions.html":{}}}],["unique",{"_index":638,"title":{},"body":{"interfaces/Service.html":{}}}],["unknown",{"_index":292,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{},"injectables/ProxyService.html":{}}}],["unlicensed",{"_index":755,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":187,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["url",{"_index":438,"title":{},"body":{"injectables/ProxyConfigService.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{},"miscellaneous/variables.html":{}}}],["url(target",{"_index":606,"title":{},"body":{"injectables/ProxyService.html":{}}}],["url.pathname}${url.search",{"_index":607,"title":{},"body":{"injectables/ProxyService.html":{}}}],["urlencoded",{"_index":515,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["urljoin",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["urljoin(...args",{"_index":715,"title":{},"body":{"miscellaneous/functions.html":{}}}],["use",{"_index":218,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/ProxyModuleOptions.html":{},"injectables/ProxyService.html":{},"interfaces/Service.html":{}}}],["use(req",{"_index":219,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"modules/RedisCachingModule.html":{}}}],["useexisting",{"_index":538,"title":{},"body":{"interfaces/ProxyModuleAsyncOptions.html":{}}}],["usefactory",{"_index":108,"title":{},"body":{"classes/CacheConfigurationService.html":{},"modules/ProxyModule.html":{},"interfaces/ProxyModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":427,"title":{},"body":{"modules/LoggingModule.html":{},"modules/ProxyModule.html":{}}}],["using",{"_index":559,"title":{},"body":{"injectables/ProxyService.html":{}}}],["utilities",{"_index":258,"title":{},"body":{"interfaces/ElasticSearchLoggerOptions.html":{},"classes/ElasticSearchLoggerService.html":{},"modules/ProxyModule.html":{},"injectables/ProxyService.html":{}}}],["uuid",{"_index":232,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["v",{"_index":244,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["v.tostring(16",{"_index":248,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["v2",{"_index":740,"title":{},"body":{"index.html":{}}}],["validation",{"_index":737,"title":{},"body":{"index.html":{}}}],["validator",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":141,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"classes/ElasticSearchLoggerService.html":{},"injectables/ProxyService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":210,"title":{},"body":{"classes/CaseInsensitiveMap.html":{}}}],["variable",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":757,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":451,"title":{},"body":{"controllers/ProxyController.html":{},"properties.html":{}}}],["void",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"classes/CaseInsensitiveMap.html":{},"injectables/CorrelationIdMiddleware.html":{},"controllers/HealthController.html":{},"injectables/LoggerMiddleware.html":{}}}],["warning",{"_index":274,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["warning(message",{"_index":304,"title":{},"body":{"classes/ElasticSearchLoggerService.html":{}}}],["wines",{"_index":437,"title":{},"body":{"injectables/ProxyConfigService.html":{}}}],["without",{"_index":588,"title":{},"body":{"injectables/ProxyService.html":{}}}],["www",{"_index":513,"title":{},"body":{"modules/ProxyModule.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":245,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{},"index.html":{}}}],["xxxx",{"_index":236,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["xxxxxxxx",{"_index":235,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["xxxxxxxxxxxx'.replace",{"_index":238,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["xy]/g",{"_index":239,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["yearly",{"_index":353,"title":{},"body":{"classes/ElasticSearchLoggerUtilities.html":{},"miscellaneous/enumerations.html":{}}}],["yes",{"_index":143,"title":{},"body":{"classes/CaseInsensitiveMap.html":{},"classes/ElasticSearchLoggerService.html":{},"injectables/ProxyService.html":{}}}],["yxxx",{"_index":237,"title":{},"body":{"injectables/CorrelationIdMiddleware.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/LoggingModule.html":{},"modules/ProxyModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLoggingModule\n\nLoggingModule\n\nAppModule -->\n\nLoggingModule->AppModule\n\n\n\n\n\nProxyModule\n\nProxyModule\n\nAppModule -->\n\nProxyModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            LoggingModule\n                        \n                        \n                            ProxyModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { RedisCachingModule } from './caching/redis-caching.module';\nimport { HealthModule } from './health/health.module';\nimport { CorrelationIdMiddleware } from './middleware/correlation-id.middleware';\nimport { LoggerMiddleware } from './middleware/logger.middleware';\nimport { ProxyModule } from './proxy/proxy.module';\nimport { ProxyConfigService } from './services/proxy-config.service';\nimport { LoggingModule } from './logging/logging.module';\nimport { ROLLING_INDEX_MODE } from './logging/utilities';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    //RedisCachingModule,\n    ThrottlerModule.forRoot({\n      ttl: 60,\n      limit: 10,\n    }),\n    HealthModule,\n    ProxyModule.forRootAsync({\n      useClass: ProxyConfigService,\n      imports: [ConfigModule],\n    }),\n    LoggingModule.forRoot({\n      name: 'nest-proxy',\n      indexPrefix: 'npy',\n      stdout: true,\n      elasticSearchClientOptions: {\n        nodes: 'http://localhost:9200',\n        auth: {\n          username: 'elastic',\n          password: 'changeme',\n        },\n      },\n      rollingOffsetMode: ROLLING_INDEX_MODE.MONTHLY,\n    }),\n  ],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    // eslint-disable-next-line prettier/prettier\n    consumer\n      .apply(\n        LoggerMiddleware, \n        CorrelationIdMiddleware)\n      .forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheConfigurationService.html":{"url":"classes/CacheConfigurationService.html","title":"class - CacheConfigurationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheConfigurationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/caching/config/cache-configuration.service.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        CacheOptionsFactory\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCacheOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCacheOptions\n                        \n                    \n                \n            \n            \n                \ncreateCacheOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/caching/config/cache-configuration.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     CacheModuleAsyncOptions\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CacheModuleAsyncOptions, CacheOptionsFactory } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport * as redisStore from 'cache-manager-redis-store';\n\nexport class CacheConfigurationService implements CacheOptionsFactory {\n  createCacheOptions(): CacheModuleAsyncOptions {\n    return {\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        store: redisStore,\n        host: configService.get('REDIS_HOST'),\n        port: configService.get('REDIS_PORT'),\n        ttl: configService.get('CACHE_TTL_IN_SECONDS'),\n        max: configService.get('CACHE_MAX_ITEMS_IN_CACHE'),\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaseInsensitiveMap.html":{"url":"classes/CaseInsensitiveMap.html","title":"class - CaseInsensitiveMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaseInsensitiveMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proxy/services/case-insensitive.map.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides a case-insensitive map of strings.\n\n            \n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                keysMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                delete\n                            \n                            \n                                entries\n                            \n                            \n                                forEach\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                keys\n                            \n                            \n                                set\n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iterable?: Iterable<>)\n                    \n                \n                        \n                            \n                                Defined in src/proxy/services/case-insensitive.map.ts:5\n                            \n                        \n\n                \n                    \n                            Converts a map to a set of key-value pairs.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        iterable\n                                                  \n                                                        \n                                                                    Iterable<>\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The iterable to convert to a map\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        keysMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/proxy/services/case-insensitive.map.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/case-insensitive.map.ts:72\n                \n            \n\n\n            \n                \n                    Clears the map.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(key: TKey)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/case-insensitive.map.ts:61\n                \n            \n\n\n            \n                \n                    Removes the given key from the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            TKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entries\n                        \n                    \n                \n            \n            \n                \nentries()\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/case-insensitive.map.ts:88\n                \n            \n\n\n            \n                \n                    Returns a collection of key-value pairs in the map.\n\n\n                    \n                        Returns :     IterableIterator<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forEach\n                        \n                    \n                \n            \n            \n                \nforEach(callbackfn: (value: TVal,key: TKey,map: Map) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/case-insensitive.map.ts:100\n                \n            \n\n\n            \n                \n                    Iterates over the map and calls the given callback for each key-value pair.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    callbackfn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A callback to execute for each element, taking three arguments:\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: TKey)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/case-insensitive.map.ts:39\n                \n            \n\n\n            \n                \n                    Returns the value for the given key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            TKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to get the value for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TVal | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: TKey)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/case-insensitive.map.ts:50\n                \n            \n\n\n            \n                \n                    Detects if the given key is in the map.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            TKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keys\n                        \n                    \n                \n            \n            \n                \nkeys()\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/case-insensitive.map.ts:81\n                \n            \n\n\n            \n                \n                    Returns a collection of keys in the map.\n\n\n                    \n                    \n                    \n                        Returns :     IterableIterator\n\n                    \n                    \n                        A collection of keys\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: TKey, value: TVal)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/case-insensitive.map.ts:26\n                \n            \n\n\n            \n                \n                    Updates the map with the given key-value pairs.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            TKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to set\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            TVal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to set\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n            \n                \n()\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/case-insensitive.map.ts:114\n                \n            \n\n\n            \n                \n                    Returns the collection of key-value pairs in the map.\n\n\n                    \n                    \n                    \n                        Returns :     IterableIterator<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class CaseInsensitiveMap extends Map {\n  private keysMap = new Map();\n\n  /**\n   * Converts a map to a set of key-value pairs.\n   * @param iterable The iterable to convert to a map\n   */\n  constructor(iterable?: Iterable) {\n    super();\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.set(key, value);\n      }\n    }\n  }\n\n  /**\n   * Updates the map with the given key-value pairs.\n   * @param key The key to set\n   * @param value The value to set\n   * @returns The current instance\n   */\n  set(key: TKey, value: TVal): this {\n    const keyLowerCase =\n      typeof key === 'string' ? (key.toLowerCase() as any as TKey) : key;\n    this.keysMap.set(keyLowerCase, key);\n\n    return super.set(keyLowerCase, value);\n  }\n\n  /**\n   * Returns the value for the given key.\n   * @param key The key to get the value for\n   * @returns\n   */\n  get(key: TKey): TVal | undefined {\n    return typeof key === 'string'\n      ? super.get(key.toLowerCase() as any as TKey)\n      : super.get(key);\n  }\n\n  /**\n   * Detects if the given key is in the map.\n   * @param key The key to check\n   * @returns \n   */\n  has(key: TKey): boolean {\n    return typeof key === 'string'\n      ? super.has(key.toLowerCase() as any as TKey)\n      : super.has(key);\n  }\n\n  /**\n   * Removes the given key from the map.\n   * @param key The key to remove\n   * @returns \n   */\n  delete(key: TKey): boolean {\n    const keyLowerCase =\n      typeof key === 'string' ? (key.toLowerCase() as any as TKey) : key;\n    this.keysMap.delete(keyLowerCase);\n\n    return super.delete(keyLowerCase);\n  }\n\n  /**\n   * Clears the map.\n   */\n  clear(): void {\n    this.keysMap.clear();\n    super.clear();\n  }\n\n  /**\n   * Returns a collection of keys in the map.\n   * @returns A collection of keys\n   */\n  keys(): IterableIterator {\n    return this.keysMap.values();\n  }\n\n  /**\n   * Returns a collection of key-value pairs in the map.\n   */\n  *entries(): IterableIterator {\n    const keys = this.keysMap.values();\n    const values = super.values();\n    for (let i = 0; i ) => void,\n  ): void {\n    const keys = this.keysMap.values();\n    const values = super.values();\n    for (let i = 0; i  {\n    return this.entries();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CorrelationIdMiddleware.html":{"url":"injectables/CorrelationIdMiddleware.html","title":"injectable - CorrelationIdMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CorrelationIdMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/correlation-id.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/correlation-id.middleware.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n@Injectable()\nexport class CorrelationIdMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    const correlationHeader = req.header('x-correlation-id') || uuid();\n    req.headers['x-correlation-id'] = correlationHeader;\n    res.setHeader('x-correlation-id', correlationHeader);\n    next();\n    function uuid() {\n      return 'xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx'.replace(\n        /[xy]/g,\n        function (c) {\n          // eslint-disable-next-line prettier/prettier\n          const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n          return v.toString(16);\n        },\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElasticSearchLoggerOptions.html":{"url":"interfaces/ElasticSearchLoggerOptions.html","title":"interface - ElasticSearchLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElasticSearchLoggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logging/interfaces/elastic-search-logger-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            elasticSearchClientOptions\n                                        \n                                \n                                \n                                        \n                                            indexPrefix\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            rollingOffsetMode\n                                        \n                                \n                                \n                                        \n                                            stdout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        elasticSearchClientOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elasticSearchClientOptions:     ClientOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ClientOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indexPrefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        indexPrefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rollingOffsetMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rollingOffsetMode:         ROLLING_INDEX_MODE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ROLLING_INDEX_MODE\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stdout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stdout:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientOptions } from '@elastic/elasticsearch';\nimport { ROLLING_INDEX_MODE } from '../utilities';\n\nexport default interface ElasticSearchLoggerOptions {\n  name: string;\n  indexPrefix: string;\n  rollingOffsetMode: ROLLING_INDEX_MODE;\n  stdout: boolean;\n  elasticSearchClientOptions: ClientOptions;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ElasticSearchLoggerService.html":{"url":"classes/ElasticSearchLoggerService.html","title":"class - ElasticSearchLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ElasticSearchLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logging/services/elastic-search-logger.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                client\n                            \n                            \n                                    Private\n                                indexCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createIndexIfNotExists\n                            \n                            \n                                    Public\n                                    Async\n                                debug\n                            \n                            \n                                    Public\n                                    Async\n                                error\n                            \n                            \n                                    Public\n                                    Async\n                                getLatest\n                            \n                            \n                                    Public\n                                    Async\n                                info\n                            \n                            \n                                    Public\n                                    Async\n                                log\n                            \n                            \n                                    Public\n                                    Async\n                                raw\n                            \n                            \n                                    Public\n                                    Async\n                                trace\n                            \n                            \n                                    Public\n                                    Async\n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ElasticSearchLoggerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/logging/services/elastic-search-logger.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ElasticSearchLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Client\n\n                    \n                \n                    \n                        \n                                Defined in src/logging/services/elastic-search-logger.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        indexCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/logging/services/elastic-search-logger.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createIndexIfNotExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIndexIfNotExists(index: string, body?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/services/elastic-search-logger.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(message: T, index?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/services/elastic-search-logger.service.ts:114\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: T, index?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/services/elastic-search-logger.service.ts:110\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getLatest\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatest(index?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/services/elastic-search-logger.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        info\n                        \n                    \n                \n            \n            \n                \n                    \n                    info(message: T, index?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/services/elastic-search-logger.service.ts:106\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(level: string, message: T, index?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/services/elastic-search-logger.service.ts:53\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Primary log message handler.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        raw\n                        \n                    \n                \n            \n            \n                \n                    \n                    raw(message: T, index?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/services/elastic-search-logger.service.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        trace\n                        \n                    \n                \n            \n            \n                \n                    \n                    trace(message: T, index?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/services/elastic-search-logger.service.ts:122\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        warning\n                        \n                    \n                \n            \n            \n                \n                    \n                    warning(message: T, index?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/services/elastic-search-logger.service.ts:118\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Client } from '@elastic/elasticsearch';\nimport { Inject } from '@nestjs/common';\nimport ElasticSearchLoggerOptions from '../interfaces/elastic-search-logger-options';\nimport { ElasticSearchLoggerUtilities } from '../utilities';\nimport * as os from 'os';\n\nexport class ElasticSearchLoggerService {\n  private readonly client: Client;\n  private indexCache: Array = [];\n\n  constructor(\n    @Inject('CONFIG_OPTIONS')\n    private readonly options: ElasticSearchLoggerOptions,\n  ) {\n    this.client = new Client(options.elasticSearchClientOptions);\n  }\n\n  public async createIndexIfNotExists(index: string, body?: any) {\n    if (this.indexCache.indexOf(index) > -1) {\n      return;\n    }\n\n    const result = await this.client.indices.exists({ index });\n    if (!result) {\n      await this.client.indices.create({\n        index,\n        body: body || {\n          mappings: {\n            properties: {\n              date: {\n                type: 'date',\n              },\n\n              hostname: { type: 'text' },\n              level: { type: 'keyword' },\n              body: { type: 'nested' },\n            },\n          },\n        },\n      });\n    }\n\n    this.indexCache.push(index);\n  }\n\n  /**\n   * Primary log message handler.\n   *\n   * @param {string} level\n   * @param message\n   * @param index\n   */\n  public async log(\n    level: string,\n    message: T,\n    index?: string,\n  ): Promise {\n    if (!!!index) {\n      index = ElasticSearchLoggerUtilities.getRollingIndex(\n        this.options.indexPrefix,\n        this.options.rollingOffsetMode,\n      );\n    }\n\n    await this.createIndexIfNotExists(index);\n\n    const result = await this.client.index({\n      index: index,\n      body: {\n        date: new Date(),\n        hostname: os.hostname(),\n        level,\n        body: { message },\n      },\n    });\n\n    if (this.options.stdout) {\n      console.log(`[${this.options.name}] ${JSON.stringify(message)}`);\n    }\n\n    return result._id;\n  }\n\n  public async raw(message: T, index?: string): Promise {\n    if (!!!index) {\n      index = ElasticSearchLoggerUtilities.getRollingIndex(\n        this.options.indexPrefix,\n        this.options.rollingOffsetMode,\n      );\n    }\n\n    await this.createIndexIfNotExists(index);\n\n    const result = await this.client.index({\n      index: index,\n      body: message,\n    });\n\n    if (this.options.stdout) {\n      console.log(`[${this.options.name}] ${JSON.stringify(message)}`);\n    }\n\n    return result._id;\n  }\n\n  public async info(message: T, index?: string): Promise {\n    return this.log('info', message, index);\n  }\n\n  public async error(message: T, index?: string): Promise {\n    return this.log('error', message, index);\n  }\n\n  public async debug(message: T, index?: string): Promise {\n    return this.log('debug', message, index);\n  }\n\n  public async warning(message: T, index?: string): Promise {\n    return this.log('warning', message, index);\n  }\n\n  public async trace(message: T, index?: string): Promise {\n    return this.log('trace', message, index);\n  }\n\n  public async getLatest(index?: string) {\n    if (!!!index) {\n      index = `${this.options.indexPrefix}*`;\n    }\n\n    return this.client.search({\n      index,\n      body: {\n        sort: [\n          {\n            date: {\n              order: 'desc',\n            },\n          },\n        ],\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ElasticSearchLoggerUtilities.html":{"url":"classes/ElasticSearchLoggerUtilities.html","title":"class - ElasticSearchLoggerUtilities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ElasticSearchLoggerUtilities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logging/utilities/elastic-search-logger.utiltiies.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getRollingIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getRollingIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRollingIndex(prefix: string, mode: ROLLING_INDEX_MODE)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/utilities/elastic-search-logger.utiltiies.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mode\n                                    \n                                                ROLLING_INDEX_MODE\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum ROLLING_INDEX_MODE {\n  YEARLY = 4,\n  MONTHLY = 7,\n  DAILY = 10,\n}\n\nexport class ElasticSearchLoggerUtilities {\n  public static getRollingIndex(\n    prefix: string,\n    mode: ROLLING_INDEX_MODE,\n  ): string {\n    return `${prefix}-${new Date().toISOString().slice(0, mode)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/controllers/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkHealth\n                        \n                    \n                \n            \n            \n                \ncheckHealth(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/health/controllers/health.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res } from '@nestjs/common';\nimport { Response } from 'express';\nimport { HealthService } from '../services';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Healthchecks')\n@Controller('health')\nexport class HealthController {\n  constructor(private readonly healthService: HealthService) {}\n\n  @Get()\n  checkHealth(@Res() res: Response) {\n    const result = {\n      status: this.healthService.checkHealth(),\n    };\n    res.contentType('application/json');\n    res.send(JSON.stringify(result));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\n\nHealthService\n\nHealthService\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthService->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HealthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './controllers';\nimport { HealthService } from './services';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n  providers: [HealthService],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HealthService.html":{"url":"injectables/HealthService.html","title":"injectable - HealthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HealthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/services/health.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpHealthIndicator\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, healthCheckService: HealthCheckService, _httpHealthIndicator: HttpHealthIndicator, diskHealthIndicator: DiskHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator)\n                    \n                \n                        \n                            \n                                Defined in src/health/services/health.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                        HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _httpHealthIndicator\n                                                  \n                                                        \n                                                                    HttpHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkHealth\n                        \n                    \n                \n            \n            \n                \ncheckHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/health/services/health.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpHealthIndicator\n                    \n                \n\n                \n                    \n                        gethttpHealthIndicator()\n                    \n                \n                            \n                                \n                                    Defined in src/health/services/health.service.ts:12\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  DiskHealthIndicator,\n  HealthCheckService,\n  HttpHealthIndicator,\n  MemoryHealthIndicator,\n} from '@nestjs/terminus';\n\n@Injectable()\nexport class HealthService {\n  public get httpHealthIndicator(): HttpHealthIndicator {\n    return this._httpHealthIndicator;\n  }\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly healthCheckService: HealthCheckService,\n    private readonly _httpHealthIndicator: HttpHealthIndicator,\n    private readonly diskHealthIndicator: DiskHealthIndicator,\n    private readonly memoryHealthIndicator: MemoryHealthIndicator,\n  ) {}\n\n  checkHealth(): string {\n    return 'OK';\n  }\n\n  // TODO: add more health checks\n  // https://github.com/otasoft/otasoft-api/blob/master/src/health/services/health.service.ts\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: ElasticSearchLoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/logger.middleware.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        ElasticSearchLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.middleware.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { ElasticSearchLoggerService } from 'src/logging/services';\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  constructor(private readonly logger: ElasticSearchLoggerService) {}\n\n  use(req: Request, res: Response, next: NextFunction) {\n      this.logger.info(req.url);\n\n    //console.debug(`[${req.method}]-> ${req.url}`);\n    next();\n    //console.debug(`[${res.statusCode}]\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggingModule.html":{"url":"modules/LoggingModule.html","title":"module - LoggingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggingModule\n\n\n\ncluster_LoggingModule_exports\n\n\n\n\nElasticSearchLoggerService \n\nElasticSearchLoggerService \n\n\n\nLoggingModule\n\nLoggingModule\n\nElasticSearchLoggerService  -->\n\nLoggingModule->ElasticSearchLoggerService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logging/logging.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ElasticSearchLoggerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: ElasticSearchLoggerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/logging/logging.module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ElasticSearchLoggerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { DynamicModule } from '@nestjs/common';\nimport { Module } from '@nestjs/common';\nimport ElasticSearchLoggerOptions from './interfaces/elastic-search-logger-options';\nimport { ElasticSearchLoggerService } from './services/elastic-search-logger.service';\n\n@Module({\n  providers: [\n    ElasticSearchLoggerService\n  ],\n  exports: [ElasticSearchLoggerService],\n})\nexport class LoggingModule {\n  public static forRoot(options: ElasticSearchLoggerOptions): DynamicModule {\n    return {\n      module: LoggingModule,\n      providers: [\n        {\n            provide: 'CONFIG_OPTIONS',\n            useValue: options\n        },\n        ElasticSearchLoggerService\n      ],\n      exports: [ ElasticSearchLoggerService ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProxyConfigService.html":{"url":"injectables/ProxyConfigService.html","title":"injectable - ProxyConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProxyConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/proxy-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createModuleConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/proxy-config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createModuleConfig\n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/services/proxy-config.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ProxyModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ProxyModuleOptions, ProxyModuleOptionsFactory } from '../proxy';\n\n@Injectable()\nexport class ProxyConfigService implements ProxyModuleOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createModuleConfig(): ProxyModuleOptions {\n    //const FFDC = this.configService.get('FFDC');\n\n    const services = [\n      {\n        id: 'WINES',\n        url: `https://api.sampleapis.com/wines/reds`,\n        config: {},\n      },\n      {\n        id: 'COFFEES',\n        url: `https://api.sampleapis.com/coffee/hot`,\n        config: {},\n      },\n    ];\n\n    return {\n      services,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProxyController.html":{"url":"controllers/ProxyController.html","title":"controller - ProxyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProxyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proxy/controllers/proxy.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                proxy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        proxy\n                        \n                    \n                \n            \n            \n                \n                    \n                    proxy(response: Response, request: Request, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @All('')\n                \n            \n\n            \n                \n                    Defined in src/proxy/controllers/proxy.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  All,\n  Controller,\n  Logger,\n  Param,\n  Request as NestRequest,\n  Res,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { ProxyService } from '../services';\n\n@Controller({\n  path: '?*/proxy',\n  version: '1',\n})\nexport class ProxyController {\n  private readonly logger = new Logger(ProxyController.name);\n\n  constructor(private proxyService: ProxyService) {}\n\n  @All('')\n  async proxy(\n    @Res() response: Response,\n    @NestRequest() request: Request,\n    @Param() params,\n  ) {\n    try {\n      this.proxyService.proxyRequest(request, response, params);\n    } catch (err) {\n      const msg = 'An error occurred while making the proxy call';\n\n      response.status(500).send({ error: msg });\n\n      this.logger.error(msg, err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProxyModule.html":{"url":"modules/ProxyModule.html","title":"module - ProxyModule","body":"\n                   \n\n\n\n\n    Modules\n    ProxyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProxyModule\n\n\n\ncluster_ProxyModule_providers\n\n\n\n\nProxyService\n\nProxyService\n\n\n\nProxyModule\n\nProxyModule\n\nProxyModule -->\n\nProxyService->ProxyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/proxy/proxy.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProxyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProxyController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        createAsyncOptionsProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: ProxyModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/proxy.module.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ProxyModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        createAsyncProviders\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: ProxyModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/proxy.module.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ProxyModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: ProxyModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/proxy.module.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ProxyModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: ProxyModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/proxy.module.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ProxyModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Logger, Module, Provider } from '@nestjs/common';\nimport { createProxyServer } from 'http-proxy';\nimport * as queryString from 'querystring';\nimport { ProxyController } from './controllers';\nimport {\n  ProxyModuleAsyncOptions,\n  ProxyModuleOptions,\n  ProxyModuleOptionsFactory,\n} from './interfaces';\nimport {\n  defaultProxyOptions,\n  HTTP_PROXY,\n  PROXY_MODULE_OPTIONS,\n} from './proxy.constants';\nimport { ProxyService } from './services';\nimport { concatPath } from './utilities';\n\nconst proxyFactory = {\n  provide: HTTP_PROXY,\n  useFactory: async (options: ProxyModuleOptions) => {\n    const logger = new Logger('Proxy');\n    const proxy = createProxyServer({\n      ...defaultProxyOptions,\n      ...options.config,\n    });\n\n    proxy.on('proxyReq', function (proxyReq, req, res, opts) {\n      const url = concatPath(`${proxyReq.protocol}//${proxyReq.host}`, req.url);\n      logger.log(`Sending ${req.method} ${url}`);\n\n      let cookies = (proxyReq.getHeader('cookie') || '') as string;\n      const allowedCookies = options.allowedCookies || [];\n      cookies = cookies\n        .split(';')\n        .filter(\n          (cookie) =>\n            allowedCookies.indexOf(cookie.split('=')[0].trim()) !== -1,\n        )\n        .join(';');\n\n      proxyReq.setHeader('cookie', cookies);\n\n      if (!req['body'] || !Object.keys(req['body']).length) {\n        return;\n      }\n\n      const contentType = proxyReq.getHeader('Content-Type');\n      let bodyData: string;\n\n      if (contentType === 'application/json') {\n        bodyData = JSON.stringify(req['body']);\n      }\n\n      if (contentType === 'application/x-www-form-urlencoded') {\n        bodyData = queryString.stringify(req['body']);\n      }\n\n      if (bodyData) {\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\n        proxyReq.write(bodyData);\n      }\n    });\n\n    proxy.on('proxyRes', function (proxyRes, req, res) {\n      const url = concatPath(\n        `${proxyRes['req'].protocol}//${proxyRes['req'].host}`,\n        req.url,\n      );\n      logger.log(`Received ${req.method} ${url}`);\n    });\n    return proxy;\n  },\n  inject: [PROXY_MODULE_OPTIONS],\n};\n\n@Module({\n  providers: [ProxyService, proxyFactory],\n  controllers: [ProxyController],\n})\nexport class ProxyModule {\n  static forRoot(options: ProxyModuleOptions): DynamicModule {\n    return {\n      module: ProxyModule,\n      providers: [\n        {\n          provide: PROXY_MODULE_OPTIONS,\n          useValue: options,\n        },\n      ],\n    };\n  }\n\n  static forRootAsync(options: ProxyModuleAsyncOptions): DynamicModule {\n    return {\n      module: ProxyModule,\n      imports: options.imports,\n      providers: [...this.createAsyncProviders(options)],\n    };\n  }\n\n  private static createAsyncProviders(\n    options: ProxyModuleAsyncOptions,\n  ): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  private static createAsyncOptionsProvider(\n    options: ProxyModuleAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        provide: PROXY_MODULE_OPTIONS,\n        useFactory: async (...args: any[]) => await options.useFactory(...args),\n        inject: options.inject || [],\n      };\n    }\n    return {\n      provide: PROXY_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: ProxyModuleOptionsFactory) =>\n        await optionsFactory.createModuleConfig(),\n      inject: [options.useExisting || options.useClass],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProxyModuleAsyncOptions.html":{"url":"interfaces/ProxyModuleAsyncOptions.html","title":"interface - ProxyModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProxyModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proxy/interfaces/proxy-module-async-options.ts\n        \n\n\n            \n                Description\n            \n            \n                Async Options for the ProxyModule.\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            inject\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useClass\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useExisting\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common/interfaces';\nimport { ProxyModuleOptions } from './proxy-module-options';\nimport { ProxyModuleOptionsFactory } from './proxy-module-options-factory';\n\n/**\n * Async Options for the ProxyModule.\n */\nexport interface ProxyModuleAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  useFactory?: (\n    ...args: any[]\n  ) => Promise | ProxyModuleOptions;\n  inject?: any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProxyModuleOptions.html":{"url":"interfaces/ProxyModuleOptions.html","title":"interface - ProxyModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProxyModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proxy/interfaces/proxy-module-options.ts\n        \n\n\n            \n                Description\n            \n            \n                The ProxyModuleOptions interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allowedCookies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            services\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowedCookies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedCookies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Determines if the proxy will use cookies.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:     server.ServerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     server.ServerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The proxy configuration options passed to the http-proxy module.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        services\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        services:         Service[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Service[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The service to use for proxying.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as server from 'http-proxy';\nimport { Service } from './service';\n\n/**\n * The ProxyModuleOptions interface.\n */\nexport interface ProxyModuleOptions {\n  /**\n   * The proxy configuration options passed to the http-proxy module.\n   */\n  config?: server.ServerOptions;\n\n  /**\n   * The service to use for proxying.\n   */\n  services?: Service[];\n\n  /**\n   * Determines if the proxy will use cookies.\n   */\n  allowedCookies?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProxyModuleOptionsFactory.html":{"url":"interfaces/ProxyModuleOptionsFactory.html","title":"interface - ProxyModuleOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProxyModuleOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proxy/interfaces/proxy-module-options-factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Async Options factory for the ProxyModule.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createModuleConfig\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createModuleConfig\n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/interfaces/proxy-module-options-factory.ts:10\n                \n            \n\n\n            \n                \n                    Create the ProxyModuleOptions as a Promise or synchronously.\n\n\n                    \n                        Returns :         Promise | ProxyModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ProxyModuleOptions } from './proxy-module-options';\n\n/**\n * Async Options factory for the ProxyModule.\n */\nexport interface ProxyModuleOptionsFactory {\n  /**\n   * Create the ProxyModuleOptions as a Promise or synchronously.\n   */\n  createModuleConfig(): Promise | ProxyModuleOptions;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProxyService.html":{"url":"injectables/ProxyService.html","title":"injectable - ProxyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProxyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proxy/services/proxy.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides the ability to proxy incoming traffic to a target endpoint\nusing a service id\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                executeProxy\n                            \n                            \n                                    Async\n                                proxyRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(proxy: server | any, options: ProxyModuleOptions)\n                    \n                \n                        \n                            \n                                Defined in src/proxy/services/proxy.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        proxy\n                                                  \n                                                        \n                                                                    server | any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ProxyModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the proxy module options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        executeProxy\n                        \n                    \n                \n            \n            \n                \n                    \n                    executeProxy(req: Request, res: Response, target: string, token: string, options: server.ServerOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/proxy.service.ts:91\n                \n            \n\n\n            \n                \n                    Performs the proxy request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The incoming request\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The outgoing response\n\n                                    \n                                \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The target url\n\n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The token to use for the request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            server.ServerOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        The proxy options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        proxyRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    proxyRequest(req: Request, res: Response, params?)\n                \n            \n\n\n            \n                \n                    Defined in src/proxy/services/proxy.service.ts:34\n                \n            \n\n\n            \n                \n                    Performs a lookup of the target url for the given service id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The incoming request\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The outgoing response\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The route parameters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ProxyService.name)\n                    \n                \n                    \n                        \n                                Defined in src/proxy/services/proxy.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger, Param } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport * as server from 'http-proxy';\nimport { ProxyModuleOptions } from '../interfaces';\nimport { HTTP_PROXY, PROXY_MODULE_OPTIONS } from '../proxy.constants';\nimport { concatPath, getBaseURL } from '../utilities';\nimport { CaseInsensitiveMap } from './case-insensitive.map';\n\n/**\n * Provides the ability to proxy incoming traffic to a target endpoint \n * using a service id\n */\n@Injectable()\nexport class ProxyService {\n  private readonly logger = new Logger(ProxyService.name);\n\n  /**\n   * Constructor\n   * @param The http proxy instance\n   * @param options the proxy module options\n   */\n  constructor(\n    @Inject(HTTP_PROXY) private proxy: server | any,\n    @Inject(PROXY_MODULE_OPTIONS) private options: ProxyModuleOptions,\n  ) {}\n\n  /**\n   * Performs a lookup of the target url for the given service id\n   * @param req The incoming request\n   * @param res The outgoing response\n   * @param params The route parameters\n   * @returns\n   */\n  async proxyRequest(req: Request, res: Response, @Param() params?) {\n    const target = req.query.target as string;\n    const serviceId = req.query.serviceId as string;\n    let token = null;\n\n    if(req.hasOwnProperty('user')) {\n      token = (req['user'] as any).authTokens.accessToken;\n    }\n\n    const prefix = params ? `${params[0]}` : '';\n\n    if(target && !serviceId) {\n      const error = `Cannot make a proxy call without a serviceId`;\n      this.logger.warn(error);\n      return res.status(500).send({\n        error,\n      });\n    }\n\n    if (serviceId) {\n      const services = new CaseInsensitiveMap(\n        this.options.services\n          ? this.options.services.map((service) => [service.id, service])\n          : [],\n      );\n\n      if (services.has(serviceId)) {\n        const service = services.get(serviceId);\n        const baseUrl = service.url;\n        return this.executeProxy(\n          req,\n          res,\n          target ? concatPath(baseUrl, prefix, target) : baseUrl,\n          service.forwardToken === false ? null : token,\n          service.config,\n        );\n      } else {\n        const error = `Could not find serviceId ${serviceId}`;\n        this.logger.warn(error);\n        return res.status(404).send({\n          error,\n        });\n      }\n    }\n\n    res.status(404).send({ error: \"Could not find 'target' or 'serviceId'\" });\n    this.logger.error(\"Could not find 'target' or 'serviceId'\");\n  }\n\n  /**\n   * Performs the proxy request\n   * @param req The incoming request\n   * @param res The outgoing response\n   * @param target The target url\n   * @param token The token to use for the request\n   * @param options The proxy options\n   */\n  private async executeProxy(\n    req: Request,\n    res: Response,\n    target: string,\n    token: string,\n    options: server.ServerOptions = {},\n  ) {\n    const url = new URL(target);\n    req.url = `${url.pathname}${url.search}`;\n\n    const defaultOptions = {\n      target: getBaseURL(target),\n      headers: {\n        ...(token && { authorization: 'Bearer ' + token }),\n        'content-type': 'application/json',\n        accept: 'application/json',\n      },\n    };\n\n    // Allow http-server options overriding\n    const requestOptions = { ...defaultOptions, ...options };\n    requestOptions.headers = {\n      ...defaultOptions.headers,\n      ...(options && options.headers),\n    }; // To deep extend headers\n\n    this.proxy.web(req, res, requestOptions, err => {\n      if (err.code === 'ECONNRESET') return;\n\n      this.logger.error(\n        `Error ${err.code} while proxying ${req.method} ${req.url}`,\n      );\n\n      res.writeHead(500, {\n        'Content-Type': 'text/plain',\n      });\n\n      res.end('An error occurred while proxying the request');\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisCachingModule.html":{"url":"modules/RedisCachingModule.html","title":"module - RedisCachingModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisCachingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/caching/redis-caching.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CacheModule, Global, Module } from '@nestjs/common';\nimport { CacheConfigurationService } from './config';\n\n@Global()\n@Module({\n  imports: [CacheModule.registerAsync({ useClass: CacheConfigurationService })],\n  exports: [CacheModule],\n})\nexport class RedisCachingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Service.html":{"url":"interfaces/Service.html","title":"interface - Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proxy/interfaces/service.ts\n        \n\n\n            \n                Description\n            \n            \n                The ProxyModuleOptions interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            forwardToken\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:     server.ServerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     server.ServerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The configuration options for the service.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forwardToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forwardToken:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Determines if the proxy will use a forwarded token.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique id that represents the service. Can be any arbitrary string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The target endpoint to proxy to.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as server from 'http-proxy';\n\n/**\n * The ProxyModuleOptions interface.\n */\nexport interface Service {\n  /**\n   * A unique id that represents the service. Can be any arbitrary string.\n   */\n  id: string;\n\n  /**\n   * The target endpoint to proxy to.\n   */\n  url: string;\n\n  /**\n   * The configuration options for the service.\n   */\n  config?: server.ServerOptions;\n\n  /**\n   * Determines if the proxy will use a forwarded token.\n   */\n  forwardToken?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/caching/config/cache-configuration.service.ts\n            \n            class\n            CacheConfigurationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/controllers/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/services/health.service.ts\n            \n            injectable\n            HealthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/logging/interfaces/elastic-search-logger-options.ts\n            \n            interface\n            ElasticSearchLoggerOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/logging/services/elastic-search-logger.service.ts\n            \n            class\n            ElasticSearchLoggerService\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/logging/utilities/elastic-search-logger.utiltiies.ts\n            \n            class\n            ElasticSearchLoggerUtilities\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/correlation-id.middleware.ts\n            \n            injectable\n            CorrelationIdMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/middleware/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/proxy/controllers/proxy.controller.ts\n            \n            controller\n            ProxyController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/proxy/interfaces/proxy-module-async-options.ts\n            \n            interface\n            ProxyModuleAsyncOptions\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/proxy/interfaces/proxy-module-options-factory.ts\n            \n            interface\n            ProxyModuleOptionsFactory\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/proxy/interfaces/proxy-module-options.ts\n            \n            interface\n            ProxyModuleOptions\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/proxy/interfaces/service.ts\n            \n            interface\n            Service\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/proxy/proxy.constants.ts\n            \n            variable\n            defaultProxyOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/proxy/proxy.constants.ts\n            \n            variable\n            HTTP_PROXY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/proxy/proxy.constants.ts\n            \n            variable\n            PROXY_MODULE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/proxy/proxy.module.ts\n            \n            variable\n            proxyFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/proxy/services/case-insensitive.map.ts\n            \n            class\n            CaseInsensitiveMap\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/proxy/services/proxy.service.ts\n            \n            injectable\n            ProxyService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/proxy/utilities/url-join.ts\n            \n            function\n            normalize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/proxy/utilities/url-join.ts\n            \n            function\n            urlJoin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/proxy/utilities/url.utilities.ts\n            \n            function\n            concatPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/proxy/utilities/url.utilities.ts\n            \n            function\n            getBaseURL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/proxy/utilities/url.utilities.ts\n            \n            function\n            isAbsolute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/proxy-config.service.ts\n            \n            injectable\n            ProxyConfigService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @elastic/elasticsearch : ^8.2.1\n        \n            @nestjs/axios : ^0.0.8\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/elasticsearch : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/terminus : ^8.1.0\n        \n            @nestjs/throttler : ^2.0.1\n        \n            cache-manager : ^4.0.1\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            compression : ^1.7.4\n        \n            http-proxy : ^1.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ROLLING_INDEX_MODE   (src/.../elastic-search-logger.utiltiies.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/logging/utilities/elastic-search-logger.utiltiies.ts\n    \n        \n            \n                \n                    \n                        \n                        ROLLING_INDEX_MODE\n                    \n                \n                        \n                            \n                                 YEARLY\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 MONTHLY\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 DAILY\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            concatPath   (src/.../url.utilities.ts)\n                        \n                        \n                            getBaseURL   (src/.../url.utilities.ts)\n                        \n                        \n                            isAbsolute   (src/.../url.utilities.ts)\n                        \n                        \n                            normalize   (src/.../url-join.ts)\n                        \n                        \n                            urlJoin   (src/.../url-join.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/proxy/utilities/url.utilities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        concatPath\n                        \n                    \n                \n            \n            \n                \nconcatPath(...args: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBaseURL\n                        \n                    \n                \n            \n            \n                \ngetBaseURL(path)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAbsolute\n                        \n                    \n                \n            \n            \n                \nisAbsolute(path)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/proxy/utilities/url-join.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(strArray)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    strArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlJoin\n                        \n                    \n                \n            \n            \n                \nurlJoin(...args: any[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNotes\nStartup\nThe application does not exit when an error is throw, instead it will throw and error by disabling abortOnError\nRate limiting\nRate limiting has been added to prevent brute force attacks on the gateway\nTODO:\n[ ]: Elastic logging\n[-]: Redis Cache\n[x]: Correlation Id middleware\n[x]: Logging middleware\n[ ]: Model validation\n[ ]: Health checks\n[X]: ProxyMiddleware order\nstateDiagram-v2\n  direction LR\n  [*] --> Health\n  [*] --> Logging\n  Logging --> Auth\n  Auth --> CorrelationId\n  CorrelationId --> Cache\n  Cache --> Controller\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProxyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisCachingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_LoggingModule\n\n\n\ncluster_LoggingModule_exports\n\n\n\ncluster_ProxyModule\n\n\n\ncluster_ProxyModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLoggingModule\n\nLoggingModule\n\nAppModule -->\n\nLoggingModule->AppModule\n\n\n\n\n\nElasticSearchLoggerService \n\nElasticSearchLoggerService \n\nElasticSearchLoggerService  -->\n\nLoggingModule->ElasticSearchLoggerService \n\n\n\n\n\nProxyModule\n\nProxyModule\n\nAppModule -->\n\nProxyModule->AppModule\n\n\n\n\n\nHealthService\n\nHealthService\n\nHealthModule -->\n\nHealthService->HealthModule\n\n\n\n\n\nProxyService\n\nProxyService\n\nProxyModule -->\n\nProxyService->ProxyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultProxyOptions   (src/.../proxy.constants.ts)\n                        \n                        \n                            HTTP_PROXY   (src/.../proxy.constants.ts)\n                        \n                        \n                            PROXY_MODULE_OPTIONS   (src/.../proxy.constants.ts)\n                        \n                        \n                            proxyFactory   (src/.../proxy.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/proxy/proxy.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultProxyOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     server.ServerOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  changeOrigin: true,\n  timeout: 60000 * 5,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HTTP_PROXY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'httpProxy'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROXY_MODULE_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ProxyModuleOptions'\n                    \n                \n\n\n        \n    \n\n    src/proxy/proxy.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        proxyFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: HTTP_PROXY,\n  useFactory: async (options: ProxyModuleOptions) => {\n    const logger = new Logger('Proxy');\n    const proxy = createProxyServer({\n      ...defaultProxyOptions,\n      ...options.config,\n    });\n\n    proxy.on('proxyReq', function (proxyReq, req, res, opts) {\n      const url = concatPath(`${proxyReq.protocol}//${proxyReq.host}`, req.url);\n      logger.log(`Sending ${req.method} ${url}`);\n\n      let cookies = (proxyReq.getHeader('cookie') || '') as string;\n      const allowedCookies = options.allowedCookies || [];\n      cookies = cookies\n        .split(';')\n        .filter(\n          (cookie) =>\n            allowedCookies.indexOf(cookie.split('=')[0].trim()) !== -1,\n        )\n        .join(';');\n\n      proxyReq.setHeader('cookie', cookies);\n\n      if (!req['body'] || !Object.keys(req['body']).length) {\n        return;\n      }\n\n      const contentType = proxyReq.getHeader('Content-Type');\n      let bodyData: string;\n\n      if (contentType === 'application/json') {\n        bodyData = JSON.stringify(req['body']);\n      }\n\n      if (contentType === 'application/x-www-form-urlencoded') {\n        bodyData = queryString.stringify(req['body']);\n      }\n\n      if (bodyData) {\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\n        proxyReq.write(bodyData);\n      }\n    });\n\n    proxy.on('proxyRes', function (proxyRes, req, res) {\n      const url = concatPath(\n        `${proxyRes['req'].protocol}//${proxyRes['req'].host}`,\n        req.url,\n      );\n      logger.log(`Received ${req.method} ${url}`);\n    });\n    return proxy;\n  },\n  inject: [PROXY_MODULE_OPTIONS],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
